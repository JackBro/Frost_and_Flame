/**
 * Copyright (C) 2011 Paul Wortmann, PhysHex Games, www.physhexgames.co.nr
 * This file is part of "Frost And Flame"
 *
 * "Frost And Flame" is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * "Frost And Flame" is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with "Frost And Flame" If not, see <http://www.gnu.org/licenses/>.
 *
 * @author  Paul Wortmann
 * @email   physhex@gmail.com
 * @website www.physhexgames.co.nr
 * @license GPL V3
 * @date 2011-11-11
 */

#include "menu_system.hpp"
#include "game.hpp"

extern  game_type                game;

int init_menu   (void)
{
    //------ setup menu background -----------
    game.core.background.set_data ( 1, 1, 0, 0.0f, 0.0f, 0.0000f, 0.00000f, game.texture.background_00.ref_number);
    game.core.background.set_data ( 2, 1, 0, 0.0f, 0.0f, 0.0000f, 0.00000f, game.texture.background_00.ref_number);
    game.core.background.set_data ( 3, 1, 0, 0.0f, 0.0f, 0.0010f, 0.00065f, game.texture.background_01.ref_number);
    game.core.background.set_data ( 4, 1, 0, 4.0f, 0.0f, 0.0010f, 0.00065f, game.texture.background_01.ref_number);
    game.core.background.set_movement_type(FRONT_SCROLL);
    //------ setup "main" menu -----------
    game.main_menu.set_menu_title(game.language.text.main_menu);
    game.main_menu.set_keyboard_delay(16);
    game.main_menu.set_mouse_delay(24);
    game.main_menu.set_pos(0.0f,0.0f,0.001f);
    game.main_menu.set_size(0.5f,1.0f);
    game.main_menu.set_menu_font(1);
    game.main_menu.set_image_background(game.texture.background_02.ref_number);
    game.main_menu.set_button_zoom(true,0.008f,0.0005f);
    game.main_menu.set_button_images(game.texture.button_normal.ref_number,game.texture.button_highlighted.ref_number,game.texture.button_disabled.ref_number,game.texture.button_disabled.ref_number,game.texture.selection_box.ref_number,game.texture.slider_button_normal.ref_number,game.texture.slider_button_highlighted.ref_number,game.texture.arrow_button_normal.ref_number,game.texture.arrow_button_highlighted.ref_number,game.texture.arrow_button_disabled.ref_number);
    game.main_menu.set_color_normal(128,128,128,255);
    game.main_menu.set_color_highlighted(192,192,192,255);
    game.main_menu.set_color_disabled(064,064,064,128);
    game.main_menu.set_number_of_buttons(7);
    game.main_menu.set_button_data  ( 1,game.language.text.new_game);
    game.main_menu.set_button_data  ( 2,game.language.text.load_game);
    game.main_menu.set_button_data  ( 3,game.language.text.save_game);
    game.main_menu.set_button_data  ( 4,game.language.text.resume_game);
    game.main_menu.set_button_data  ( 5,game.language.text.options);
    game.main_menu.set_button_active( 6,false);
    game.main_menu.set_button_data  ( 7,game.language.text.quit_game);
    game.main_menu.set_buttons_auto();
    game.main_menu.set_close_button_data(game.texture.close_button.ref_number,game.texture.close_button_highlighted.ref_number);
    game.main_menu.set_title_data(game.language.text.main_menu);//needs to be called last due to size generated by number of buttons etc....
    game.main_menu.set_color_title(255,255,255,255);
    game.main_menu.set_text_size(4.8f,32.0f);
    //------ setup "new game" menu -----------
    game.new_game_menu.set_menu_title(game.language.text.new_game);
    game.new_game_menu.set_keyboard_delay(16);
    game.new_game_menu.set_mouse_delay(8);
    game.new_game_menu.set_pos(0.0f,0.0f,0.001f);
    game.new_game_menu.set_size(0.4f,0.6f);
    game.new_game_menu.set_menu_font(1);
    game.new_game_menu.set_image_background(game.texture.background_02.ref_number);
    game.new_game_menu.set_button_zoom(true,0.008f,0.0005f);
    game.new_game_menu.set_button_images(game.texture.button_normal.ref_number,game.texture.button_highlighted.ref_number,game.texture.button_disabled.ref_number,game.texture.button_disabled.ref_number,game.texture.selection_box.ref_number,game.texture.slider_button_normal.ref_number,game.texture.slider_button_highlighted.ref_number,game.texture.arrow_button_normal.ref_number,game.texture.arrow_button_highlighted.ref_number,game.texture.arrow_button_disabled.ref_number);
    game.new_game_menu.set_color_normal(128,128,128,255);
    game.new_game_menu.set_color_highlighted(192,192,192,255);
    game.new_game_menu.set_color_disabled(064,064,064,128);
    game.new_game_menu.set_number_of_buttons(3);
    game.new_game_menu.set_button_data  ( 1,game.language.text.new_game);
    game.new_game_menu.set_button_active( 2,false);
    game.new_game_menu.set_button_data  ( 3,game.language.text.main_menu);
    game.new_game_menu.set_buttons_auto();
    game.new_game_menu.set_close_button_data(game.texture.close_button.ref_number,game.texture.close_button_highlighted.ref_number);
    game.new_game_menu.set_button_arrow_data_auto(1);
    game.new_game_menu.set_title_data(game.language.text.new_game);//needs to be called last due to size generated by number of buttons etc....
    game.new_game_menu.set_color_title(255,255,255,255);
    game.new_game_menu.set_text_size(4.8f,32.0f);
    //------ setup "save game" menu -----------
    game.save_menu.set_menu_title(game.language.text.save_menu);
    game.save_menu.set_keyboard_delay(16);
    game.save_menu.set_mouse_delay(24);
    game.save_menu.set_pos(0.0f,0.0f,0.001f);
    game.save_menu.set_size(0.5f,1.0f);
    game.save_menu.set_menu_font(1);
    game.save_menu.set_image_background(game.texture.background_02.ref_number);
    game.save_menu.set_button_zoom(true,0.008f,0.0005f);
    game.save_menu.set_button_images(game.texture.button_normal.ref_number,game.texture.button_highlighted.ref_number,game.texture.button_disabled.ref_number,game.texture.button_disabled.ref_number,game.texture.selection_box.ref_number,game.texture.slider_button_normal.ref_number,game.texture.slider_button_highlighted.ref_number,game.texture.arrow_button_normal.ref_number,game.texture.arrow_button_highlighted.ref_number,game.texture.arrow_button_disabled.ref_number);
    game.save_menu.set_color_normal(128,128,128,255);
    game.save_menu.set_color_highlighted(192,192,192,255);
    game.save_menu.set_color_disabled(064,064,064,128);
    game.save_menu.set_number_of_buttons(9);
    game.save_menu.set_button_data  ( 1,game.language.text.save_slot_1);
    game.save_menu.set_button_data  ( 2,game.language.text.save_slot_2);
    game.save_menu.set_button_data  ( 3,game.language.text.save_slot_3);
    game.save_menu.set_button_data  ( 4,game.language.text.save_slot_4);
    game.save_menu.set_button_data  ( 5,game.language.text.save_slot_5);
    game.save_menu.set_button_data  ( 6,game.language.text.save_slot_6);
    game.save_menu.set_button_data  ( 7,game.language.text.save_slot_7);
    game.save_menu.set_button_active( 8,false);
    game.save_menu.set_button_data  ( 9,game.language.text.main_menu);
    game.save_menu.set_buttons_auto();
    game.save_menu.set_close_button_data(game.texture.close_button.ref_number,game.texture.close_button_highlighted.ref_number);
    game.save_menu.set_title_data(game.language.text.save_menu);//needs to be called last due to size generated by number of buttons etc....
    game.save_menu.set_color_title(255,255,255,255);
    game.save_menu.set_text_size(4.8f,32.0f);
    //------ setup "load game" menu -----------
    game.load_menu.set_menu_title(game.language.text.load_menu);
    game.load_menu.set_keyboard_delay(16);
    game.load_menu.set_mouse_delay(24);
    game.load_menu.set_pos(0.0f,0.0f,0.001f);
    game.load_menu.set_size(0.5f,1.0f);
    game.load_menu.set_menu_font(1);
    game.load_menu.set_image_background(game.texture.background_02.ref_number);
    game.load_menu.set_button_zoom(true,0.008f,0.0005f);
    game.load_menu.set_button_images(game.texture.button_normal.ref_number,game.texture.button_highlighted.ref_number,game.texture.button_disabled.ref_number,game.texture.button_disabled.ref_number,game.texture.selection_box.ref_number,game.texture.slider_button_normal.ref_number,game.texture.slider_button_highlighted.ref_number,game.texture.arrow_button_normal.ref_number,game.texture.arrow_button_highlighted.ref_number,game.texture.arrow_button_disabled.ref_number);
    game.load_menu.set_color_normal(128,128,128,255);
    game.load_menu.set_color_highlighted(192,192,192,255);
    game.load_menu.set_color_disabled(064,064,064,128);
    game.load_menu.set_number_of_buttons(9);
    game.load_menu.set_button_data  ( 1,game.language.text.save_slot_1);
    game.load_menu.set_button_data  ( 2,game.language.text.save_slot_2);
    game.load_menu.set_button_data  ( 3,game.language.text.save_slot_3);
    game.load_menu.set_button_data  ( 4,game.language.text.save_slot_4);
    game.load_menu.set_button_data  ( 5,game.language.text.save_slot_5);
    game.load_menu.set_button_data  ( 6,game.language.text.save_slot_6);
    game.load_menu.set_button_data  ( 7,game.language.text.save_slot_7);
    game.load_menu.set_button_active( 8,false);
    game.load_menu.set_button_data  ( 9,game.language.text.main_menu);
    game.load_menu.set_buttons_auto();
    game.load_menu.set_close_button_data(game.texture.close_button.ref_number,game.texture.close_button_highlighted.ref_number);
    game.load_menu.set_title_data(game.language.text.load_menu);//needs to be called last due to size generated by number of buttons etc....
    game.core.save_01.Assign_File("save/slot_01.sav");
    if (game.core.save_01.File_Exists()) game.load_menu.button[1].set_enabled(true);
    else game.load_menu.button[1].set_enabled(false);
    game.core.save_02.Assign_File("save/slot_02.sav");
    if (game.core.save_02.File_Exists()) game.load_menu.button[2].set_enabled(true);
    else game.load_menu.button[2].set_enabled(false);
    game.core.save_03.Assign_File("save/slot_03.sav");
    if (game.core.save_03.File_Exists()) game.load_menu.button[3].set_enabled(true);
    else game.load_menu.button[3].set_enabled(false);
    game.core.save_04.Assign_File("save/slot_04.sav");
    if (game.core.save_04.File_Exists()) game.load_menu.button[4].set_enabled(true);
    else game.load_menu.button[4].set_enabled(false);
    game.core.save_05.Assign_File("save/slot_05.sav");
    if (game.core.save_05.File_Exists()) game.load_menu.button[5].set_enabled(true);
    else game.load_menu.button[5].set_enabled(false);
    game.core.save_06.Assign_File("save/slot_06.sav");
    if (game.core.save_06.File_Exists()) game.load_menu.button[6].set_enabled(true);
    else game.load_menu.button[6].set_enabled(false);
    game.core.save_07.Assign_File("save/slot_07.sav");
    if (game.core.save_07.File_Exists()) game.load_menu.button[7].set_enabled(true);
    else game.load_menu.button[7].set_enabled(false);
    game.load_menu.set_color_title(255,255,255,255);
    game.load_menu.set_text_size(4.8f,32.0f);
    //------ setup "options" menu -----------
    game.options_menu.set_menu_title(game.language.text.options);
    game.options_menu.set_keyboard_delay(16);
    game.options_menu.set_mouse_delay(24);
    game.options_menu.set_pos(0.0f,0.0f,0.001f);
    game.options_menu.set_size(0.5f,1.0f);
    game.options_menu.set_menu_font(1);
    game.options_menu.set_image_background(game.texture.background_02.ref_number);
    game.options_menu.set_button_zoom(true,0.008f,0.0005f);
    game.options_menu.set_button_images(game.texture.button_normal.ref_number,game.texture.button_highlighted.ref_number,game.texture.button_disabled.ref_number,game.texture.button_disabled.ref_number,game.texture.selection_box.ref_number,game.texture.slider_button_normal.ref_number,game.texture.slider_button_highlighted.ref_number,game.texture.arrow_button_normal.ref_number,game.texture.arrow_button_highlighted.ref_number,game.texture.arrow_button_disabled.ref_number);
    game.options_menu.set_toggle_button_images(game.texture.green_button_highlighted.ref_number,game.texture.green_button.ref_number,game.texture.red_button_highlighted.ref_number,game.texture.red_button.ref_number);
    game.options_menu.set_color_normal(128,128,128,255);
    game.options_menu.set_color_highlighted(192,192,192,255);
    game.options_menu.set_color_disabled(064,064,064,128);
    game.options_menu.set_number_of_buttons(6);
    game.options_menu.set_button_data  ( 1,game.language.text.sound_volume);
    game.options_menu.set_button_type  ( 1,SLIDER);
    game.options_menu.set_button_slider_position(1,game.core.config.Audio_Sound_Volume);
    game.options_menu.set_button_slider_position_max(1,128);
    game.options_menu.set_button_data  ( 2,game.language.text.music_volume);
    game.options_menu.set_button_type  ( 2,SLIDER);
    game.options_menu.set_button_slider_position(2,game.core.config.Audio_Music_Volume);
    game.options_menu.set_button_slider_position_max(2,128);
    game.options_menu.set_button_data  ( 3,game.language.text.screen_resolution);
    game.options_menu.set_number_of_choices(3,8);
    game.options_menu.set_number_of_visible_choices(3,5);
    game.options_menu.set_button_choice_position(3,1);
    game.options_menu.set_button_disabled_text_label(game.language.text.menu_item_unavailable);
    game.options_menu.set_button_current_choice(3,game.core.config.Display_resolution);
    game.options_menu.set_button_choice_data(3, 1,game.texture.resolution_icon.ref_number,game.language.text.res_640_x_480,   true, true);
    game.options_menu.set_button_choice_data(3, 2,game.texture.resolution_icon.ref_number,game.language.text.res_800_x_600,   true, true);
    game.options_menu.set_button_choice_data(3, 3,game.texture.resolution_icon.ref_number,game.language.text.res_1024_x_768,  true, true);
    game.options_menu.set_button_choice_data(3, 4,game.texture.resolution_icon.ref_number,game.language.text.res_1280_x_1024, true, true);
    game.options_menu.set_button_choice_data(3, 5,game.texture.resolution_icon.ref_number,game.language.text.res_1366_x_768,  true, true);
    game.options_menu.set_button_choice_data(3, 6,game.texture.resolution_icon.ref_number,game.language.text.res_1440_x_900,  true, true);
    game.options_menu.set_button_choice_data(3, 7,game.texture.resolution_icon.ref_number,game.language.text.res_1680_x_1050, true, true);
    game.options_menu.set_button_choice_data(3, 8,game.texture.resolution_icon.ref_number,game.language.text.res_1920_x_1080, true, true);
    game.options_menu.set_button_data  ( 4,game.language.text.full_screen);
    game.options_menu.set_button_type  ( 4,TOGGLE);
    game.options_menu.set_button_active( 5,false);
    game.options_menu.set_button_data  ( 6,game.language.text.main_menu);
    game.options_menu.set_buttons_auto();
    game.options_menu.set_close_button_data(game.texture.close_button.ref_number,game.texture.close_button_highlighted.ref_number);
    game.options_menu.set_title_data(game.language.text.options);//needs to be called last due to size generated by number of buttons etc....
    game.options_menu.set_color_title(255,255,255,255);
    game.options_menu.set_text_size(4.8f,32.0f);
    //------ setup "game over" menu -----------
    game.game_over_menu.set_menu_title(game.language.text.game_over);
    game.game_over_menu.set_keyboard_delay(16);
    game.game_over_menu.set_mouse_delay(24);
    game.game_over_menu.set_pos(0.0f,0.0f,0.001f);
    game.game_over_menu.set_size(0.4f,0.2f);
    game.game_over_menu.set_menu_font(1);
    game.game_over_menu.set_image_background(game.texture.background_03.ref_number);
    game.game_over_menu.set_button_zoom(true,0.008f,0.0005f);
    game.game_over_menu.set_button_images(game.texture.button_normal.ref_number,game.texture.button_highlighted.ref_number,game.texture.button_disabled.ref_number,game.texture.button_disabled.ref_number,game.texture.selection_box.ref_number,game.texture.slider_button_normal.ref_number,game.texture.slider_button_highlighted.ref_number,game.texture.arrow_button_normal.ref_number,game.texture.arrow_button_highlighted.ref_number,game.texture.arrow_button_disabled.ref_number);
    game.game_over_menu.set_color_normal(128,128,128,255);
    game.game_over_menu.set_color_highlighted(192,192,192,255);
    game.game_over_menu.set_color_disabled(064,064,064,128);
    game.game_over_menu.set_number_of_buttons(1);
    game.game_over_menu.set_button_data  ( 1,game.language.text.main_menu);
    game.game_over_menu.set_buttons_auto();
    game.game_over_menu.set_close_button_data(game.texture.close_button.ref_number,game.texture.close_button_highlighted.ref_number);
    game.game_over_menu.set_title_data(game.language.text.game_over);//needs to be called last due to size generated by number of buttons etc....
    game.game_over_menu.set_color_title(255,255,255,255);
    game.game_over_menu.set_text_size(4.8f,32.0f);
    //------ setup "pause" menu -----------
    game.pause_menu.set_menu_title(game.language.text.game_paused);
    game.pause_menu.set_keyboard_delay(16);
    game.pause_menu.set_mouse_delay(24);
    game.pause_menu.set_pos(0.0f,0.0f,0.001f);
    game.pause_menu.set_size(0.4f,0.2f);
    game.pause_menu.set_menu_font(1);
    game.pause_menu.set_image_background(game.texture.background_03.ref_number);
    game.pause_menu.set_button_zoom(true,0.008f,0.0005f);
    game.pause_menu.set_button_images(game.texture.button_normal.ref_number,game.texture.button_highlighted.ref_number,game.texture.button_disabled.ref_number,game.texture.button_disabled.ref_number,game.texture.selection_box.ref_number,game.texture.slider_button_normal.ref_number,game.texture.slider_button_highlighted.ref_number,game.texture.arrow_button_normal.ref_number,game.texture.arrow_button_highlighted.ref_number,game.texture.arrow_button_disabled.ref_number);
    game.pause_menu.set_color_normal(128,128,128,255);
    game.pause_menu.set_color_highlighted(192,192,192,255);
    game.pause_menu.set_color_disabled(064,064,064,128);
    game.pause_menu.set_number_of_buttons(1);
    game.pause_menu.set_button_data  ( 1,game.language.text.resume_game);
    game.pause_menu.set_buttons_auto();
    game.pause_menu.set_close_button_data(game.texture.close_button.ref_number,game.texture.close_button_highlighted.ref_number);
    game.pause_menu.set_title_data(game.language.text.game_paused);//needs to be called last due to size generated by number of buttons etc....
    game.pause_menu.set_color_title(255,255,255,255);
    game.pause_menu.set_text_size(4.8f,32.0f);
    return(0);
};


//---------------------------------------------------------------------------------------
int process_menu(void)
{
    int  activated_button = -1;
    bool set_resolution   = false;
    // ------------------- main menu ------------
    activated_button = -1;
    if (game.core.menu_level == 1)
    {
        if (game.core.game_resume) game.main_menu.button[3].set_enabled(true);
        else game.main_menu.button[3].set_enabled(false);
        if (game.core.game_resume) game.main_menu.button[4].set_enabled(true);
        else game.main_menu.button[4].set_enabled(false);
        activated_button = game.main_menu.process();
        switch (activated_button)
        {
            case 1://New Game
                game.sound.menu_select_00.play();
                game.core.menu_level = 2;
                game.core.log.File_Write("Entering 'New Game' menu.");
            break;
            case 2://Load Game
                game.sound.menu_select_00.play();
                game.core.menu_level = 3;
                game.core.log.File_Write("Entering 'Load Game' menu.");
            break;
            case 3://Save Game
                if (game.core.game_resume)
                {
                    game.sound.menu_select_00.play();
                    game.core.menu_level = 4;
                    game.core.log.File_Write("Entering 'Save Game' menu.");
                }
            break;
            case 4://Resume Game
                if (game.core.game_resume)
                {
                    game.UI.active_window_list.remove_from_list(MAIN_MENU_WINDOW);
                    game.sound.menu_select_00.play();
                    game.core.music_next_track = true;
                    game.core.game_active      = true;
                    game.core.menu_active      = false;
                    game.core.log.File_Write("Resuming Game");
                }
            break;
            case 5://Options
                game.sound.menu_select_00.play();
                game.core.menu_level = 5;
                game.core.log.File_Write("Entering 'Options' menu.");
            break;
            case 6://NA
            break;
            case 7://Quit Game
                game.sound.menu_select_00.play();
                game.core.status_quit_active = true;
                game.core.log.File_Write("User terminating game - 'Quit Game' selected!");
            break;
            case 65533://only move no select.
                game.sound.menu_move_00.play();
            break;
            case 65534:// escape pressed on keyboard.
                game.core.log.File_Write("User closing main menu - keyboard escape pressed!");
            break;
            case 65535:// close button clicked.
                if (!game.core.game_active)
                {
                    game.UI.active_window_list.remove_from_list(MAIN_MENU_WINDOW);
                    game.sound.menu_select_00.play();
                    game.core.status_quit_active      = true;
                    game.core.io.key_escape           = false;
                    game.core.log.File_Write("User closing main menu - clicked close button!");
                }
                else
                {
                    game.sound.menu_select_00.play();
                    game.core.menu_active = false;
                }
            break;
            default:
            break;
        };
    };
    // ------------------- New_Game Menu ------------
    activated_button = -1;
    if (game.core.menu_level == 2)
    {
        activated_button = game.new_game_menu.process();
        switch (activated_button)
        {
            case 1://Choice 1 selected
                {
                    game.sound.menu_select_00.play();
                    game.core.music_next_track = true;
                    game.core.game_active = true;
                    game.core.menu_active = false;
                    game.core.log.File_Write("Entering game world, starting new game.");
                }
            break;
            case 3://Return to main menu
                game.sound.menu_select_00.play();
                game.core.menu_level = 1;
                game.core.log.File_Write("Entering main menu, from New_Game menu. - button selected.");
            break;
            case 65533://menu choice changed
                game.sound.menu_move_00.play();
            break;
            case 65534://Return to main menu
                game.sound.menu_select_00.play();
                game.core.menu_level = 1;
                game.core.io.key_escape           = false;
                game.core.log.File_Write("Entering main menu, from New_Game menu. - escape preses.");
            break;
            case 65535://Return to main menu
                game.sound.menu_select_00.play();
                game.core.menu_level = 1;
                game.core.log.File_Write("Entering main menu, from New_Game menu. - button clicked.");
            break;
            default:
            break;
        };
    };
    // ------------------- Load menu ------------
    activated_button = -1;
    if (game.core.menu_level == 3)
    {
        activated_button = game.load_menu.process();
        switch (activated_button)
        {
            case 1://Save Slot 1 selected.
                if (game.load_menu.get_button_enabled(1))
                {
                    game.core.save_01.Assign_File("save/slot_01.sav");
                    if (game.core.save_01.Load())
                    {
                        game.core.log.File_Write("Loading from slot 1");
                        //game.loaded.spawn();
                        game.core.game_active = true;
                        game.core.menu_active = false;
                        game.core.log.File_Write("Resuming game");
                        game.core.music_next_track = true;
                        game.sound.menu_select_00.play();
                    }
                }
            break;
            case 2://Save Slot 2 selected.
                if (game.load_menu.get_button_enabled(2))
                {
                    game.core.save_02.Assign_File("save/slot_02.sav");
                    if (game.core.save_02.Load())
                    {
                        game.core.log.File_Write("Loading from slot 2");
                        //game.loaded.spawn();
                        game.core.game_active = true;
                        game.core.menu_active = false;
                        game.core.log.File_Write("Resuming game");
                        game.core.music_next_track = true;
                        game.sound.menu_select_00.play();
                    }
                }
            break;
            case 3://Save Slot 3 selected.
                if (game.load_menu.get_button_enabled(3))
                {
                    game.core.save_03.Assign_File("save/slot_03.sav");
                    if (game.core.save_03.Load())
                    {
                        game.core.log.File_Write("Loading from slot 3");
                        //game.loaded.spawn();
                        game.core.game_active = true;
                        game.core.menu_active = false;
                        game.core.log.File_Write("Resuming game");
                        game.core.music_next_track = true;
                        game.sound.menu_select_00.play();
                    }
                }
            break;
            case 4://Save Slot 4 selected.
                if (game.load_menu.get_button_enabled(4))
                {
                    game.core.save_04.Assign_File("save/slot_04.sav");
                    if (game.core.save_04.Load())
                    {
                        game.core.log.File_Write("Loading from slot 4");
                        //game.loaded.spawn();
                        game.core.game_active = true;
                        game.core.menu_active = false;
                        game.core.log.File_Write("Resuming game");
                        game.core.music_next_track = true;
                        game.sound.menu_select_00.play();
                    }
                }
            break;
            case 5://Save Slot 5 selected.
                if (game.load_menu.get_button_enabled(5))
                {
                    game.core.save_05.Assign_File("save/slot_05.sav");
                    if (game.core.save_05.Load())
                    {
                        game.core.log.File_Write("Loading from slot 5");
                        //game.loaded.spawn();
                        game.core.game_active = true;
                        game.core.menu_active = false;
                        game.core.log.File_Write("Resuming game");
                        game.core.music_next_track = true;
                        game.sound.menu_select_00.play();
                    }
                }
            break;
            case 6://Save Slot 6 selected.
                if (game.load_menu.get_button_enabled(6))
                {
                    game.core.save_06.Assign_File("save/slot_06.sav");
                    if (game.core.save_06.Load())
                    {
                        game.core.log.File_Write("Loading from slot 6");
                        //game.loaded.spawn();
                        game.core.game_active = true;
                        game.core.menu_active = false;
                        game.core.log.File_Write("Resuming game");
                        game.core.music_next_track = true;
                        game.sound.menu_select_00.play();
                    }
                }
            break;
            case 7://Save Slot 7 selected.
                if (game.load_menu.get_button_enabled(7))
                {
                    game.core.save_07.Assign_File("save/slot_07.sav");
                    if (game.core.save_07.Load())
                    {
                        game.core.log.File_Write("Loading from slot 7");
                        //game.loaded.spawn();
                        game.core.game_active = true;
                        game.core.menu_active = false;
                        game.core.log.File_Write("Resuming game");
                        game.core.music_next_track = true;
                        game.sound.menu_select_00.play();
                    }
                }
            break;
            case 9://Return to main menu
                game.sound.menu_select_00.play();
                game.core.menu_level = 1;
                game.core.log.File_Write("Entering main menu, from load menu. - button selected.");
            break;
            case 65533://menu choice changed
                game.sound.menu_move_00.play();
            break;
            case 65534://Return to main menu
                game.sound.menu_select_00.play();
                game.core.menu_level = 1;
                game.core.io.key_escape           = false;
                game.core.log.File_Write("Entering main menu, from load menu. - escape preses.");
            break;
            case 65535://Return to main menu
                game.sound.menu_select_00.play();
                game.core.menu_level = 1;
                game.core.log.File_Write("Entering main menu, from load menu. - button clicked.");
            break;
            default:
            break;
        };
    };
    // ------------------- Save menu ------------
    activated_button = -1;
    if (game.core.menu_level == 4)
    {
        activated_button = game.save_menu.process();
        switch (activated_button)
        {
            case 1://Save Slot 1 selected.
                game.core.save_01.Assign_File("save/slot_01.sav");
                game.core.save_01.Save();
                game.core.log.File_Write("Saving to slot 1");
                //game.saved.spawn();
                game.core.game_active = true;
                game.core.menu_active = false;
                game.core.log.File_Write("Resuming game");
                game.core.music_next_track = true;
                game.sound.menu_select_00.play();
                game.load_menu.button[1].set_enabled(true);
            break;
            case 2://Save Slot 2 selected.
                game.core.save_02.Assign_File("save/slot_02.sav");
                game.core.save_02.Save();
                game.core.log.File_Write("Saving to slot 2");
                //game.saved.spawn();
                game.core.game_active = true;
                game.core.menu_active = false;
                game.core.log.File_Write("Resuming game");
                game.core.music_next_track = true;
                game.sound.menu_select_00.play();
                game.load_menu.button[2].set_enabled(true);
            break;
            case 3://Save Slot 3 selected.
                game.core.save_03.Assign_File("save/slot_03.sav");
                game.core.save_03.Save();
                game.core.log.File_Write("Saving to slot 3");
                //game.saved.spawn();
                game.core.game_active = true;
                game.core.menu_active = false;
                game.core.log.File_Write("Resuming game");
                game.core.music_next_track = true;
                game.sound.menu_select_00.play();
                game.load_menu.button[3].set_enabled(true);
            break;
            case 4://Save Slot 4 selected.
                game.core.save_04.Assign_File("save/slot_04.sav");
                game.core.save_04.Save();
                game.core.log.File_Write("Saving to slot 4");
                //game.saved.spawn();
                game.core.game_active = true;
                game.core.menu_active = false;
                game.core.log.File_Write("Resuming game");
                game.core.music_next_track = true;
                game.sound.menu_select_00.play();
                game.load_menu.button[4].set_enabled(true);
            break;
            case 5://Save Slot 5 selected.
                game.core.save_05.Assign_File("save/slot_05.sav");
                game.core.save_05.Save();
                game.core.log.File_Write("Saving to slot 5");
                //game.saved.spawn();
                game.core.game_active = true;
                game.core.menu_active = false;
                game.core.log.File_Write("Resuming game");
                game.core.music_next_track = true;
                game.sound.menu_select_00.play();
                game.load_menu.button[5].set_enabled(true);
            break;
            case 6://Save Slot 6 selected.
                game.core.save_06.Assign_File("save/slot_06.sav");
                game.core.save_06.Save();
                game.core.log.File_Write("Saving to slot 6");
                //game.saved.spawn();
                game.core.game_active = true;
                game.core.menu_active = false;
                game.core.log.File_Write("Resuming game");
                game.core.music_next_track = true;
                game.sound.menu_select_00.play();
                game.load_menu.button[6].set_enabled(true);
            break;
            case 7://Save Slot 7 selected.
                game.core.save_07.Assign_File("save/slot_07.sav");
                game.core.save_07.Save();
                game.core.log.File_Write("Saving to slot 7");
                //game.saved.spawn();
                game.core.game_active = true;
                game.core.menu_active = false;
                game.core.log.File_Write("Resuming game");
                game.core.music_next_track = true;
                game.sound.menu_select_00.play();
                game.load_menu.button[7].set_enabled(true);
            break;
            case 9://Return to main menu
                game.sound.menu_select_00.play();
                game.core.menu_level = 1;
                game.core.log.File_Write("Entering main menu, from save menu. - button selected.");
            break;
            case 65533://menu choice changed
                game.sound.menu_move_00.play();
            break;
            case 65534://Return to main menu
                game.sound.menu_select_00.play();
                game.core.menu_level = 1;
                game.core.io.key_escape           = false;
                game.core.log.File_Write("Entering main menu, from save menu. - escape preses.");
            break;
            case 65535://Return to main menu
                game.sound.menu_select_00.play();
                game.core.menu_level = 1;
                game.core.log.File_Write("Entering main menu, from save menu. - button clicked.");
            break;
            default:
            break;
        };
    };
    // ------------------- Options Menu ------------
    activated_button = -1;
    if (game.core.menu_level == 5)
    {
        game.options_menu.set_toggle_data(4,game.core.config.Display_Fullscreen);
        activated_button = game.options_menu.process();
        game.options_menu.set_button_current_choice(3,game.core.config.Display_resolution-1);
        switch (activated_button)
        {
            case 4://Toggle Full-screen
                game.options_menu.set_toggle_data(4,!game.options_menu.get_toggle_data(4));
                game.core.config.Display_Fullscreen   = !game.core.config.Display_Fullscreen;
                if (game.core.config.Display_Fullscreen) SDL_SetVideoMode(game.core.config.Display_X_Resolution,game.core.config.Display_Y_Resolution,game.core.config.Display_BPS,SDL_OPENGL | SDL_FULLSCREEN);
                else                                SDL_SetVideoMode(game.core.config.Display_X_Resolution,game.core.config.Display_Y_Resolution,game.core.config.Display_BPS,SDL_OPENGL);
                game.core.graphics.init_gl(game.core.config.Display_X_Resolution,game.core.config.Display_Y_Resolution);
                load_textures();
            break;
            case 301://Choice 1 selected
                if (game.core.config.Display_resolution != game.options_menu.get_button_choice_position(3) + 0 -1)
                {
                    game.core.config.Display_resolution = game.options_menu.get_button_choice_position(3) + 0 -1;
                    set_resolution = true;
                }
            break;
            case 302://Choice 2 selected
                if (game.core.config.Display_resolution != game.options_menu.get_button_choice_position(3) + 1 -1)
                {
                    game.core.config.Display_resolution = game.options_menu.get_button_choice_position(3) + 1 -1;
                    set_resolution = true;
                }
            break;
            case 303://Choice 3 selected
                if (game.core.config.Display_resolution != game.options_menu.get_button_choice_position(3) + 2 -1)
                {
                    game.core.config.Display_resolution = game.options_menu.get_button_choice_position(3) + 2 -1;
                    set_resolution = true;
                }
            break;
            case 304://Choice 4 selected
                if (game.core.config.Display_resolution != game.options_menu.get_button_choice_position(3) + 3 -1)
                {
                    game.core.config.Display_resolution = game.options_menu.get_button_choice_position(3) + 3 -1;
                    set_resolution = true;
                }
            break;
            case 305://Choice 5 selected
                if (game.core.config.Display_resolution != game.options_menu.get_button_choice_position(3) + 4 -1)
                {
                    game.core.config.Display_resolution = game.options_menu.get_button_choice_position(3) + 4 -1;
                    set_resolution = true;
                }
            break;
            case 4001://left arrow on button 1
                game.core.config.Audio_Sound_Volume --;
                if (game.core.config.Audio_Sound_Volume < 0) game.core.config.Audio_Sound_Volume = 0;
                Mix_Volume(-1,game.core.config.Audio_Sound_Volume);
                game.options_menu.set_button_slider_position(1,game.core.config.Audio_Sound_Volume);
            break;
            case 5001://right arrow on button 1
                game.core.config.Audio_Sound_Volume++;
                if (game.core.config.Audio_Sound_Volume > 128) game.core.config.Audio_Sound_Volume = 128;
                Mix_Volume(-1,game.core.config.Audio_Sound_Volume);
                game.options_menu.set_button_slider_position(1,game.core.config.Audio_Sound_Volume);
            break;
            case 4002://left arrow on button 2
                game.core.config.Audio_Music_Volume--;
                if (game.core.config.Audio_Music_Volume < 0) game.core.config.Audio_Music_Volume = 0;
                Mix_VolumeMusic(game.core.config.Audio_Music_Volume);
                game.options_menu.set_button_slider_position(2,game.core.config.Audio_Music_Volume);
            break;
            case 5002://right arrow on button 2
                game.core.config.Audio_Music_Volume++;
                if (game.core.config.Audio_Music_Volume > 128) game.core.config.Audio_Music_Volume = 128;
                Mix_VolumeMusic(game.core.config.Audio_Music_Volume);
                game.options_menu.set_button_slider_position(2,game.core.config.Audio_Music_Volume);
            break;
            case 4003://left arrow on button 3
                game.options_menu.set_button_choice_position(3,game.options_menu.get_button_choice_position(3)-1);
                if (game.options_menu.get_button_choice_position(3) < 1) game.options_menu.set_button_choice_position(3,1);
            break;
            case 5003://right arrow on button 3
                game.options_menu.set_button_choice_position(3,game.options_menu.get_button_choice_position(3)+1);
                if (game.options_menu.get_button_choice_position(3) >= game.options_menu.get_number_of_choices(3)-(game.options_menu.get_number_of_visible_choices(3)-1)) game.options_menu.set_button_choice_position(3,game.options_menu.get_number_of_choices(3)-(game.options_menu.get_number_of_visible_choices(3)-1));
            break;
            case 6://Return to main menu
                game.sound.menu_select_00.play();
                game.core.menu_level = 1;
                game.core.log.File_Write("Entering main menu, from Options menu. - button selected.");
            break;
            case 65533://menu choice changed
                game.sound.menu_move_00.play();
            break;
            case 65534://Return to main menu
                game.sound.menu_select_00.play();
                game.core.menu_level = 1;
                game.core.io.key_escape           = false;
                game.core.log.File_Write("Entering main menu, from Options menu. - escape preses.");
            break;
            case 65535://Return to main menu
                game.sound.menu_select_00.play();
                game.core.menu_level = 1;
                game.core.log.File_Write("Entering main menu, from Options menu. - button clicked.");
            break;
            default:
            break;
        };
        if (set_resolution)
        {
            set_resolution = false;
            if (game.core.config.Display_resolution == 0)
            {
                game.core.config.Display_X_Resolution = 640;
                game.core.config.Display_Y_Resolution = 480;
            }
            if (game.core.config.Display_resolution == 1)
            {
                game.core.config.Display_X_Resolution = 800;
                game.core.config.Display_Y_Resolution = 600;
            }
            if (game.core.config.Display_resolution == 2)
            {
                game.core.config.Display_X_Resolution = 1024;
                game.core.config.Display_Y_Resolution = 768;
            }
            if (game.core.config.Display_resolution == 3)
            {
                game.core.config.Display_X_Resolution = 1280;
                game.core.config.Display_Y_Resolution = 1024;
            }
            if (game.core.config.Display_resolution == 4)
            {
                game.core.config.Display_X_Resolution = 1366;
                game.core.config.Display_Y_Resolution = 768;
            }
            if (game.core.config.Display_resolution == 5)
            {
                game.core.config.Display_X_Resolution = 1440;
                game.core.config.Display_Y_Resolution = 900;
            }
            if (game.core.config.Display_resolution == 6)
            {
                game.core.config.Display_X_Resolution = 1680;
                game.core.config.Display_Y_Resolution = 1050;
            }
            if (game.core.config.Display_resolution == 7)
            {
                game.core.config.Display_X_Resolution = 1920;
                game.core.config.Display_Y_Resolution = 1080;
            }
            game.core.config.mouse_resolution_x   = game.core.config.Display_X_Resolution;
            game.core.config.mouse_resolution_y   = game.core.config.Display_Y_Resolution;
            if (game.core.config.Display_Fullscreen) SDL_SetVideoMode(game.core.config.Display_X_Resolution,game.core.config.Display_Y_Resolution,game.core.config.Display_BPS,SDL_OPENGL | SDL_FULLSCREEN);
            else                                SDL_SetVideoMode(game.core.config.Display_X_Resolution,game.core.config.Display_Y_Resolution,game.core.config.Display_BPS,SDL_OPENGL);
            game.core.graphics.init_gl(game.core.config.Display_X_Resolution,game.core.config.Display_Y_Resolution);
            load_textures();
        }
    };
    // ------------------- Game Over Menu ------------
    activated_button = -1;
    if (game.core.menu_level == 6)
    {
        activated_button = game.game_over_menu.process();
        switch (activated_button)
        {
            case 1://Button 1 selected.
                game.sound.menu_select_00.play();
                game.core.menu_level              = 1;
                game.core.menu_active             = true;
                game.core.pdie_active             = false;
                game.core.outr_active             = false;
                game.core.game_active             = false;
                game.core.nlvl_active             = false;
                game.core.io.key_escape           = false;
                game.core.music_next_track        = true;
                game.core.log.File_Write("Entering main menu, from game over menu. - button 1 selected.");
                game.main_menu.set_keyboard_delay_count(0);
                game.main_menu.set_mouse_delay_count(0);
                SDL_WarpMouse(game.core.graphics.gl_to_res(game.main_menu.get_button_x_pos(1),game.core.config.mouse_resolution_x),game.core.config.mouse_resolution_y-game.core.graphics.gl_to_res(game.main_menu.get_button_y_pos(1),game.core.config.mouse_resolution_y));
            break;
            case 65533://menu choice changed
                game.sound.menu_move_00.play();
            break;
            case 65534://Return to main menu
                game.sound.menu_select_00.play();
                game.core.menu_level              = 1;
                game.core.menu_active             = true;
                game.core.pdie_active             = false;
                game.core.outr_active             = false;
                game.core.game_active             = false;
                game.core.nlvl_active             = false;
                game.core.io.key_escape           = false;
                game.core.music_next_track        = true;
                game.core.log.File_Write("Entering main menu, from game over menu. - button 1 selected.");
                game.main_menu.set_keyboard_delay_count(0);
                game.main_menu.set_mouse_delay_count(0);
                SDL_WarpMouse(game.core.graphics.gl_to_res(game.main_menu.get_button_x_pos(1),game.core.config.mouse_resolution_x),game.core.config.mouse_resolution_y-game.core.graphics.gl_to_res(game.main_menu.get_button_y_pos(1),game.core.config.mouse_resolution_y));
            break;
            case 65535://Return to main menu
                game.sound.menu_select_00.play();
                game.core.menu_level              = 1;
                game.core.menu_active             = true;
                game.core.pdie_active             = false;
                game.core.outr_active             = false;
                game.core.game_active             = false;
                game.core.nlvl_active             = false;
                game.core.io.key_escape           = false;
                game.core.music_next_track        = true;
                game.core.log.File_Write("Entering main menu, from game over menu. - button 1 selected.");
                game.main_menu.set_keyboard_delay_count(0);
                game.main_menu.set_mouse_delay_count(0);
                SDL_WarpMouse(game.core.graphics.gl_to_res(game.main_menu.get_button_x_pos(1),game.core.config.mouse_resolution_x),game.core.config.mouse_resolution_y-game.core.graphics.gl_to_res(game.main_menu.get_button_y_pos(1),game.core.config.mouse_resolution_y));
            break;
            default:
            break;
        };
    };
    // ------------------- Pause Menu ------------
    activated_button = -1;
    if (game.core.menu_level == 7)
    {
        activated_button = game.pause_menu.process();
        switch (activated_button)
        {
            case 1://Button 1 selected.
                game.sound.menu_select_00.play();
                game.core.game_paused      = false;
                game.core.game_active      = true;
                game.core.io.key_escape    = false;
                game.core.io.select        = false;
                game.core.io.pause         = false;
                SDL_WarpMouse(game.core.graphics.gl_to_res(game.main_menu.get_button_x_pos(1),game.core.config.mouse_resolution_x),game.core.config.mouse_resolution_y-game.core.graphics.gl_to_res(game.main_menu.get_button_y_pos(1),game.core.config.mouse_resolution_y));
                game.core.io.key_space  = false;
                game.core.io.key_enter  = false;
                game.core.io.select     = false;
                game.main_menu.set_keyboard_delay(128);
                game.main_menu.set_keyboard_delay_count(0);
                game.main_menu.set_mouse_delay_count(0);
                game.core.log.File_Write("Entering game menu, from pause menu. - button 1 selected.");
            break;
            case 65533://menu choice changed
                game.sound.menu_move_00.play();
            break;
            case 65534://Return to game
                game.sound.menu_select_00.play();
                game.core.game_paused      = false;
                game.core.game_active      = true;
                game.core.io.key_escape    = false;
                game.core.io.select        = false;
                game.core.io.pause         = false;
                SDL_WarpMouse(game.core.graphics.gl_to_res(game.main_menu.get_button_x_pos(1),game.core.config.mouse_resolution_x),game.core.config.mouse_resolution_y-game.core.graphics.gl_to_res(game.main_menu.get_button_y_pos(1),game.core.config.mouse_resolution_y));
                game.core.io.key_space  = false;
                game.core.io.key_enter  = false;
                game.core.io.select     = false;
                game.main_menu.set_keyboard_delay(128);
                game.main_menu.set_keyboard_delay_count(0);
                game.main_menu.set_mouse_delay_count(0);
                game.core.log.File_Write("Entering game menu, from pause menu. - button 1 selected.");
            break;
            case 65535://Return to game
                game.sound.menu_select_00.play();
                game.core.game_paused      = false;
                game.core.game_active      = true;
                game.core.io.key_escape    = false;
                game.core.io.select        = false;
                game.core.io.pause         = false;
                SDL_WarpMouse(game.core.graphics.gl_to_res(game.main_menu.get_button_x_pos(1),game.core.config.mouse_resolution_x),game.core.config.mouse_resolution_y-game.core.graphics.gl_to_res(game.main_menu.get_button_y_pos(1),game.core.config.mouse_resolution_y));
                game.core.io.key_space  = false;
                game.core.io.key_enter  = false;
                game.core.io.select     = false;
                game.main_menu.set_keyboard_delay(128);
                game.main_menu.set_keyboard_delay_count(0);
                game.main_menu.set_mouse_delay_count(0);
                game.core.log.File_Write("Entering game menu, from pause menu. - button 1 selected.");
            break;
            default:
            break;
        };
    };
    //-------------------------------------------------------------------------------------------------------------------
   return(0);
};

//---------------------------------------------------------------------------------------------------------------
int diplay_menu (void)
{
    glPushMatrix();
    glDisable(GL_DEPTH_TEST);
    if (!game.core.game_active)
    {
        if (game.core.menu_level !=  7)
        {
            game.core.background.draw();
        }
        game.texture.logo.draw(true,0.0f,0.9f,0.001f,1.6f,0.2f);
        game.font.font_1.Write(255,255,255,64,-0.98f,-0.98f,2,16,"www.PhysHexGames.co.nr");
        /*-----------------------------------------------------------------------------*/
        if (game.core.menu_level ==  7) //Pause screen
        {
            ;
        }
    }
/*-----------------------------------------------------------------------------*/
   if (game.core.menu_level ==  1) game.main_menu.draw();//main_menu
   if (game.core.menu_level ==  2) game.new_game_menu.draw();//new_game_menu
   if (game.core.menu_level ==  3) game.load_menu.draw();//load_menu
   if (game.core.menu_level ==  4) game.save_menu.draw();//save_menu
   if (game.core.menu_level ==  5) game.options_menu.draw();//options_menu
   if (game.core.menu_level ==  6) game.game_over_menu.draw();//game_over_menu
   if (game.core.menu_level ==  7) game.pause_menu.draw(); //pause_menu
/*-----------------------------------------------------------------------------*/
   glPopMatrix();
   return(0);
};
