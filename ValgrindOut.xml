<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: /host/_git_/Frost_and_Flame/Frost_And_Flame </line>
</preamble>

<pid>2678</pid>
<ppid>1996</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--suppressions=/usr/lib/valgrind/debian-libc6-dbg.supp</arg>
    <arg>--leak-check=full</arg>
    <arg>--track-origins=yes</arg>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/host/_git_/Frost_and_Flame/ValgrindOut.xml</arg>
  </vargv>
  <argv>
    <exe>/host/_git_/Frost_and_Flame/Frost_And_Flame</exe>
    <arg></arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.173 </time>
</status>

<error>
  <unique>0x2</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0xBE844E0</ip>
      <obj>/lib/x86_64-linux-gnu/libz.so.1.2.3.4</obj>
      <fn>inflateReset2</fn>
    </frame>
    <frame>
      <ip>0xBE845D8</ip>
      <obj>/lib/x86_64-linux-gnu/libz.so.1.2.3.4</obj>
      <fn>inflateInit2_</fn>
    </frame>
    <frame>
      <ip>0x7D5A0D3</ip>
      <obj>/lib/x86_64-linux-gnu/libpng12.so.0.46.0</obj>
      <fn>png_create_read_struct_2</fn>
    </frame>
    <frame>
      <ip>0x7D5A296</ip>
      <obj>/lib/x86_64-linux-gnu/libpng12.so.0.46.0</obj>
      <fn>png_create_read_struct</fn>
    </frame>
    <frame>
      <ip>0x53345F4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_image-1.2.so.0.8.2</obj>
      <fn>IMG_LoadPNG_RW</fn>
    </frame>
    <frame>
      <ip>0x53306DB</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_image-1.2.so.0.8.2</obj>
      <fn>IMG_LoadTyped_RW</fn>
    </frame>
    <frame>
      <ip>0x47478C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x460511</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>loading_screen_class::display(std::string)</fn>
    </frame>
    <frame>
      <ip>0x45DF6F</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x7D654CC</ip>
      <obj>/lib/x86_64-linux-gnu/libpng12.so.0.46.0</obj>
      <fn>png_malloc</fn>
    </frame>
    <frame>
      <ip>0x7D4DB95</ip>
      <obj>/lib/x86_64-linux-gnu/libpng12.so.0.46.0</obj>
    </frame>
    <frame>
      <ip>0xBE845B6</ip>
      <obj>/lib/x86_64-linux-gnu/libz.so.1.2.3.4</obj>
      <fn>inflateInit2_</fn>
    </frame>
    <frame>
      <ip>0x7D5A0D3</ip>
      <obj>/lib/x86_64-linux-gnu/libpng12.so.0.46.0</obj>
      <fn>png_create_read_struct_2</fn>
    </frame>
    <frame>
      <ip>0x7D5A296</ip>
      <obj>/lib/x86_64-linux-gnu/libpng12.so.0.46.0</obj>
      <fn>png_create_read_struct</fn>
    </frame>
    <frame>
      <ip>0x53345F4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_image-1.2.so.0.8.2</obj>
      <fn>IMG_LoadPNG_RW</fn>
    </frame>
    <frame>
      <ip>0x53306DB</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_image-1.2.so.0.8.2</obj>
      <fn>IMG_LoadTyped_RW</fn>
    </frame>
    <frame>
      <ip>0x47478C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x460511</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>loading_screen_class::display(std::string)</fn>
    </frame>
    <frame>
      <ip>0x45DF6F</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xb</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x418532</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xc</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x4184A5</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xd3</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x4187CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ec350 is 10 bytes after a block of size 38 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A82E</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>free</fn>
    </frame>
    <frame>
      <ip>0x4AA692</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string()</fn>
    </frame>
    <frame>
      <ip>0x448BF0</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>generate_random_item(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x4498E4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>init_items()</fn>
    </frame>
    <frame>
      <ip>0x45EC72</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xd4</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x4188DD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ec350 is 10 bytes after a block of size 38 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A82E</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>free</fn>
    </frame>
    <frame>
      <ip>0x4AA692</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string()</fn>
    </frame>
    <frame>
      <ip>0x448BF0</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>generate_random_item(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x4498E4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>init_items()</fn>
    </frame>
    <frame>
      <ip>0x45EC72</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xd5</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x4189E1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ec668 is 8 bytes before a block of size 80,008 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xd6</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x418AF5</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ec668 is 8 bytes before a block of size 80,008 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xd7</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x418C83</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ec358 is not stack'd, malloc'd or (recently) free'd</auxwhat>
</error>

<error>
  <unique>0xd8</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x418D37</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ec348 is 2 bytes after a block of size 38 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A82E</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>free</fn>
    </frame>
    <frame>
      <ip>0x4AA692</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string()</fn>
    </frame>
    <frame>
      <ip>0x448BF0</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>generate_random_item(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x4498E4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>init_items()</fn>
    </frame>
    <frame>
      <ip>0x45EC72</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xd9</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x418F33</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ec358 is not stack'd, malloc'd or (recently) free'd</auxwhat>
</error>

<error>
  <unique>0xda</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x41936D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ec668 is 8 bytes before a block of size 80,008 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xdb</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x4194EB</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ec668 is 8 bytes before a block of size 80,008 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xdc</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x419671</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ec668 is 8 bytes before a block of size 80,008 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xdd</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x419975</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ec668 is 8 bytes before a block of size 80,008 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xde</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x419AF7</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ec668 is 8 bytes before a block of size 80,008 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xdf</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x419C7D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ec668 is 8 bytes before a block of size 80,008 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xe0</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x419E03</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ec668 is 8 bytes before a block of size 80,008 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xe1</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x419F8D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ec668 is 8 bytes before a block of size 80,008 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xe2</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x41A117</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ec668 is 8 bytes before a block of size 80,008 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xe5</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x418A0B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ec358 is not stack'd, malloc'd or (recently) free'd</auxwhat>
</error>

<error>
  <unique>0x160</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x418C88</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AB21A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AB2FF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AB7FC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::append(std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4098AC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x448B6A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>generate_random_item(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x4498E4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>init_items()</fn>
    </frame>
    <frame>
      <ip>0x45EC72</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x161</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x418F38</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AB21A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AB2FF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AB7FC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::append(std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4098AC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x448B6A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>generate_random_item(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x4498E4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>init_items()</fn>
    </frame>
    <frame>
      <ip>0x45EC72</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x162</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x4187D2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AB21A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AB2FF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AB7FC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::append(std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4098AC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x448B6A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>generate_random_item(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x4498E4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>init_items()</fn>
    </frame>
    <frame>
      <ip>0x45EC72</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x163</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x4188E2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AB21A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AB2FF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AB7FC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::append(std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4098AC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x448B6A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>generate_random_item(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x4498E4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>init_items()</fn>
    </frame>
    <frame>
      <ip>0x45EC72</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x164</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x418A10</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AB21A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AB2FF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AB7FC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::append(std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4098AC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x448B6A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>generate_random_item(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x4498E4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>init_items()</fn>
    </frame>
    <frame>
      <ip>0x45EC72</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x16c</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x418D3C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AB21A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AB2FF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AB7FC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::append(std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4098AC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x448B6A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>generate_random_item(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x4498E4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>init_items()</fn>
    </frame>
    <frame>
      <ip>0x45EC72</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x17f</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x419715</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ec448 is 7 bytes after a block of size 65 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AB21A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AB2FF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AB7FC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::append(std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4098AC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x448B6A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>generate_random_item(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x4498E4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>init_items()</fn>
    </frame>
    <frame>
      <ip>0x45EC72</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x180</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x419EA7</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ec448 is 7 bytes after a block of size 65 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AB21A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AB2FF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AB7FC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::append(std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4098AC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x448B6A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>generate_random_item(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x4498E4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>init_items()</fn>
    </frame>
    <frame>
      <ip>0x45EC72</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x185</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x41958F</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ec450 is 15 bytes after a block of size 65 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AB21A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AB2FF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AB7FC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::append(std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4098AC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x448B6A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>generate_random_item(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x4498E4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>init_items()</fn>
    </frame>
    <frame>
      <ip>0x45EC72</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x19a</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x419B9B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ec478 is not stack'd, malloc'd or (recently) free'd</auxwhat>
</error>

<error>
  <unique>0x1a1</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x419D21</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ec480 is 16 bytes before a block of size 29 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A82E</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>free</fn>
    </frame>
    <frame>
      <ip>0x4AA83E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x44812D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>generate_random_item(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x4498FD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>init_items()</fn>
    </frame>
    <frame>
      <ip>0x45EC72</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1a2</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x41A031</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ec480 is 16 bytes before a block of size 29 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A82E</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>free</fn>
    </frame>
    <frame>
      <ip>0x4AA83E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x44812D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>generate_random_item(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x4498FD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>init_items()</fn>
    </frame>
    <frame>
      <ip>0x45EC72</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1a3</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x41A1BB</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ec480 is 16 bytes before a block of size 29 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A82E</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>free</fn>
    </frame>
    <frame>
      <ip>0x4AA83E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x44812D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>generate_random_item(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x4498FD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>init_items()</fn>
    </frame>
    <frame>
      <ip>0x45EC72</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2e4</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x418CAD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ec668 is 8 bytes before a block of size 80,008 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2e6</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x418F5D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ec668 is 8 bytes before a block of size 80,008 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2e7</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x418A39</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ec668 is 8 bytes before a block of size 80,008 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2e9</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x41881E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2ea</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x418DEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2eb</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x4196C6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2ec</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x419CD2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2ed</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x419E58</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2ee</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x419FE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2ef</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x41A16C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2f0</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x4187A8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2f1</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x4188B8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2f2</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x418B20</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2f3</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x418C02</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2f4</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x418DE7</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ffef8 is 0 bytes after a block of size 80,008 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2f5</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x418EB2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2f6</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x419516</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2f7</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x41969C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2f8</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x419B22</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2f9</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x419CA8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2fa</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x419E2E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2fb</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x419FB8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2fc</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x41A142</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2fd</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x4187A3</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ffef8 is 0 bytes after a block of size 80,008 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2fe</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x4188B3</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ffef8 is 0 bytes after a block of size 80,008 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2ff</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x418B1B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ffef8 is 0 bytes after a block of size 80,008 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x300</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x418BE0</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x302</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x418E90</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x303</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x419511</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ffef8 is 0 bytes after a block of size 80,008 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x304</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x419697</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ffef8 is 0 bytes after a block of size 80,008 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x305</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x419B1D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ffef8 is 0 bytes after a block of size 80,008 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x306</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x419CA3</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ffef8 is 0 bytes after a block of size 80,008 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x307</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x419E29</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ffef8 is 0 bytes after a block of size 80,008 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x308</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x419FB3</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ffef8 is 0 bytes after a block of size 80,008 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x309</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x41A13D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ffef8 is 0 bytes after a block of size 80,008 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x30d</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x418BDB</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ffef8 is 0 bytes after a block of size 80,008 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x30f</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x418E8B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ffef8 is 0 bytes after a block of size 80,008 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x3fb</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x41953B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0fffd0 is 16 bytes inside a block of size 72 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A82E</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>free</fn>
    </frame>
    <frame>
      <ip>0x6A6810D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libpulse.so.0.13.5</obj>
      <fn>pa_xfree</fn>
    </frame>
    <frame>
      <ip>0x6A51DE3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libpulse.so.0.13.5</obj>
    </frame>
    <frame>
      <ip>0x6A5343B</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libpulse.so.0.13.5</obj>
      <fn>pa_mainloop_prepare</fn>
    </frame>
    <frame>
      <ip>0x6A53DCC</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libpulse.so.0.13.5</obj>
      <fn>pa_mainloop_iterate</fn>
    </frame>
    <frame>
      <ip>0x4E6C868</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
    </frame>
    <frame>
      <ip>0x4E3CB42</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
    </frame>
    <frame>
      <ip>0x4E44FD4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
    </frame>
    <frame>
      <ip>0x4E88998</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
    </frame>
    <frame>
      <ip>0x6127E99</ip>
      <obj>/lib/x86_64-linux-gnu/libpthread-2.15.so</obj>
      <fn>start_thread</fn>
      <dir>/build/buildd/eglibc-2.15/nptl</dir>
      <file>pthread_create.c</file>
      <line>308</line>
    </frame>
    <frame>
      <ip>0x5E554BC</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.15.so</obj>
      <fn>clone</fn>
      <dir>/build/buildd/eglibc-2.15/misc/../sysdeps/unix/sysv/linux/x86_64</dir>
      <file>clone.S</file>
      <line>112</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x3fc</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x419565</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0fffc0 is 0 bytes inside a block of size 72 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A82E</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>free</fn>
    </frame>
    <frame>
      <ip>0x6A6810D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libpulse.so.0.13.5</obj>
      <fn>pa_xfree</fn>
    </frame>
    <frame>
      <ip>0x6A51DE3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libpulse.so.0.13.5</obj>
    </frame>
    <frame>
      <ip>0x6A5343B</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libpulse.so.0.13.5</obj>
      <fn>pa_mainloop_prepare</fn>
    </frame>
    <frame>
      <ip>0x6A53DCC</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libpulse.so.0.13.5</obj>
      <fn>pa_mainloop_iterate</fn>
    </frame>
    <frame>
      <ip>0x4E6C868</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
    </frame>
    <frame>
      <ip>0x4E3CB42</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
    </frame>
    <frame>
      <ip>0x4E44FD4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
    </frame>
    <frame>
      <ip>0x4E88998</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
    </frame>
    <frame>
      <ip>0x6127E99</ip>
      <obj>/lib/x86_64-linux-gnu/libpthread-2.15.so</obj>
      <fn>start_thread</fn>
      <dir>/build/buildd/eglibc-2.15/nptl</dir>
      <file>pthread_create.c</file>
      <line>308</line>
    </frame>
    <frame>
      <ip>0x5E554BC</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.15.so</obj>
      <fn>clone</fn>
      <dir>/build/buildd/eglibc-2.15/misc/../sysdeps/unix/sysv/linux/x86_64</dir>
      <file>clone.S</file>
      <line>112</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x3ff</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x419B47</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0fffd0 is 16 bytes inside a block of size 72 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A82E</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>free</fn>
    </frame>
    <frame>
      <ip>0x6A6810D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libpulse.so.0.13.5</obj>
      <fn>pa_xfree</fn>
    </frame>
    <frame>
      <ip>0x6A51DE3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libpulse.so.0.13.5</obj>
    </frame>
    <frame>
      <ip>0x6A5343B</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libpulse.so.0.13.5</obj>
      <fn>pa_mainloop_prepare</fn>
    </frame>
    <frame>
      <ip>0x6A53DCC</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libpulse.so.0.13.5</obj>
      <fn>pa_mainloop_iterate</fn>
    </frame>
    <frame>
      <ip>0x4E6C868</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
    </frame>
    <frame>
      <ip>0x4E3CB42</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
    </frame>
    <frame>
      <ip>0x4E44FD4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
    </frame>
    <frame>
      <ip>0x4E88998</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
    </frame>
    <frame>
      <ip>0x6127E99</ip>
      <obj>/lib/x86_64-linux-gnu/libpthread-2.15.so</obj>
      <fn>start_thread</fn>
      <dir>/build/buildd/eglibc-2.15/nptl</dir>
      <file>pthread_create.c</file>
      <line>308</line>
    </frame>
    <frame>
      <ip>0x5E554BC</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.15.so</obj>
      <fn>clone</fn>
      <dir>/build/buildd/eglibc-2.15/misc/../sysdeps/unix/sysv/linux/x86_64</dir>
      <file>clone.S</file>
      <line>112</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x7aa</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x4189C4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x7ab</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x418AD8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x7af</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x418FE0</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x7b0</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x419131</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x7b1</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x4191CE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x7b2</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x419350</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x7b3</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x4194CE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x7b4</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x419654</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x7b5</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x4197DA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x7b6</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x419958</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x7b7</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x419ADA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x7b8</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x419C60</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x7b9</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x419DE6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x7ba</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x419F70</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x7bb</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x41A0FA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2370</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x41D8A1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xf0ec668 is 8 bytes before a block of size 80,008 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2371</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x41D763</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2372</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x41CC6E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2373</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x41CDB9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2374</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x41D03B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2375</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x41D195</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2376</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x41D5D2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2377</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x41D73C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2378</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x41C938</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417536</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>


<status>
  <state>FINISHED</state>
  <time>00:00:01:41.599 </time>
</status>

<error>
  <unique>0x248d</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>1 bytes in 1 blocks are definitely lost in loss record 1 of 1,026</text>
    <leakedbytes>1</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x6CD393D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libX11.so.6.3.0</obj>
      <fn>_XlcDefaultMapModifiers</fn>
    </frame>
    <frame>
      <ip>0x6CD3D35</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libX11.so.6.3.0</obj>
      <fn>XSetLocaleModifiers</fn>
    </frame>
    <frame>
      <ip>0x4E7479B</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
    </frame>
    <frame>
      <ip>0x4E753C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
    </frame>
    <frame>
      <ip>0x4E65A6C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
      <fn>SDL_VideoInit</fn>
    </frame>
    <frame>
      <ip>0x4E3C12B</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
      <fn>SDL_InitSubSystem</fn>
    </frame>
    <frame>
      <ip>0x4E3C19B</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
      <fn>SDL_Init</fn>
    </frame>
    <frame>
      <ip>0x45FDA0</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>graphics_class::init_sdl()</fn>
    </frame>
    <frame>
      <ip>0x45DD78</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24b2</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 38 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x462FEE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_main(int)</fn>
    </frame>
    <frame>
      <ip>0x437BC4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24b3</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 39 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x463084</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_main(int)</fn>
    </frame>
    <frame>
      <ip>0x437BC4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24b4</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 40 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x46311A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_main(int)</fn>
    </frame>
    <frame>
      <ip>0x437BC4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24b5</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 41 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x4631B0</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_main(int)</fn>
    </frame>
    <frame>
      <ip>0x437BC4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24b6</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 42 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x463E56</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_main(int)</fn>
    </frame>
    <frame>
      <ip>0x437BC4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24b7</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 43 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x463F3A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_main(int)</fn>
    </frame>
    <frame>
      <ip>0x437BC4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24b8</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 44 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x46BCBE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24b9</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 45 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x46BD54</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24ba</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 46 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x46BDEA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24bb</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 47 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x46BE80</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24bc</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 48 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x46CB7D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24bd</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 49 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x46CC6A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24be</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 50 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x46DEAF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24bf</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 51 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x46DF43</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24c0</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 52 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x46DFDA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24c1</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 53 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x46E071</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24c2</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 54 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x46E108</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24c3</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 55 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x46E19F</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24c4</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 56 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x46E236</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24c5</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 57 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x46E2CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24c6</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 58 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x46E364</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24c7</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 59 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x46E3FB</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24c8</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 60 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x46E492</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24c9</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 61 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x46E529</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24ca</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 62 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x46E5C0</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24cb</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 63 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x46EB7B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24cc</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 64 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x46EC68</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24cd</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 65 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x46ED55</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24ce</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 66 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x46F6AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24cf</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 67 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x46F79C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24d0</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 68 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x46F889</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24d1</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 69 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x470226</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24d2</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 70 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x4708E1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24d3</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 71 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x470F99</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24d4</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 72 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x47164E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24d5</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 73 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x471D03</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24d6</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 74 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x41E59E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_load(int)</fn>
    </frame>
    <frame>
      <ip>0x437BD8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24d7</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 75 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x41E634</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_load(int)</fn>
    </frame>
    <frame>
      <ip>0x437BD8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24d8</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 76 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x41E6CA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_load(int)</fn>
    </frame>
    <frame>
      <ip>0x437BD8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24d9</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 77 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x41E760</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_load(int)</fn>
    </frame>
    <frame>
      <ip>0x437BD8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24da</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 78 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x41F43C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_load(int)</fn>
    </frame>
    <frame>
      <ip>0x437BD8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24db</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 79 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x41F520</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_load(int)</fn>
    </frame>
    <frame>
      <ip>0x437BD8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24dc</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 80 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x4232B2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_save(int)</fn>
    </frame>
    <frame>
      <ip>0x437BE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24dd</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 81 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x423348</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_save(int)</fn>
    </frame>
    <frame>
      <ip>0x437BE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24de</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 82 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x4233DE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_save(int)</fn>
    </frame>
    <frame>
      <ip>0x437BE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24df</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 83 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x423474</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_save(int)</fn>
    </frame>
    <frame>
      <ip>0x437BE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24e0</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 84 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42411A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_save(int)</fn>
    </frame>
    <frame>
      <ip>0x437BE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24e1</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 85 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x4241FE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_save(int)</fn>
    </frame>
    <frame>
      <ip>0x437BE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24e2</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 86 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x427D72</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24e3</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 87 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x427E08</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24e4</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 88 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x427E9E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24e5</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 89 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x427F34</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24e6</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 90 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x428BFB</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24e7</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 91 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x428CE8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24e8</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 92 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x429E35</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24e9</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 93 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x429F22</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24ea</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 94 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42A00F</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24eb</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 95 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42A641</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24ec</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 96 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42A72E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24ed</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 97 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42A81B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24ee</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 98 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42A908</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24ef</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 99 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42B258</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24f0</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 100 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42B345</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24f1</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 101 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42B432</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24f2</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 102 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42B51F</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24f3</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 103 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42BE72</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24f4</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 104 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42BF5F</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24f5</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 105 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42C04C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24f6</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 106 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42C139</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24f7</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 107 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42CA8C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24f8</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 108 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42CB79</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24f9</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 109 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42CC66</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24fa</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 110 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42CD53</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24fb</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 111 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42D6A6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24fc</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 112 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42D793</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24fd</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 113 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42D880</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24fe</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 114 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42D96D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24ff</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 115 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42E212</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2500</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 116 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42E2FF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2501</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 117 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42E3EC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2502</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 118 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42E9EC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2503</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 119 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42EAD9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2504</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 120 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42EBC6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2505</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 121 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42F1CA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2506</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 122 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42F2B7</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2507</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 123 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42F3A4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2508</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 124 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42F9DC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2509</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 125 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42FAC9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x250a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 126 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42FBB6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x250b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 127 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x43020D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x250c</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 128 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x4302FA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x250d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 129 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x4303E7</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x250e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 130 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x430C6C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x250f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 131 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x430D59</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2510</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 132 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x430E46</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2511</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 133 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x431480</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2512</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 134 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x43156D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2513</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 135 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x43165A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2514</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 136 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x431CB3</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2515</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 137 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x431DA0</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2516</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 138 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x431E8D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2517</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 139 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x433428</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2518</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 140 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x43350C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2519</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 141 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x4335F0</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x251a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 142 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x4336D4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x251b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 143 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x409EC7</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x251c</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 144 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x409F5D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x251d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 145 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x409FF3</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x251e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 146 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x40A089</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x251f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 147 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x40B411</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2520</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 148 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x40B4FE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2521</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 149 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x40BBD5</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2522</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 150 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x40BCBC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2523</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 151 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x40C38A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2524</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 152 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x40C46E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2525</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 153 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x40C9A1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2526</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 154 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x40CA85</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2527</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 155 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x43DEA2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2528</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 156 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x43DF38</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2529</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 157 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x43DFCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x252a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 158 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x43E064</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x252b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 159 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x43EE81</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x252c</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 160 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x43EF6E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x252d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 161 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x43F47D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x252e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 162 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x43F56A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x252f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 163 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x43FCA8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2530</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 164 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x43FD95</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2531</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 165 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x440547</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2532</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 166 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x440634</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2533</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 167 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x440DE6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2534</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 168 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x440ED3</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2535</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 169 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x441685</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2536</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 170 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x441772</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2537</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 171 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x441F1E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2538</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 172 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x442002</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2539</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 173 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x4427AB</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x253a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 174 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x44288F</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x253b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 175 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x4524C6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_character_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C0A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x253c</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 176 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x45255C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_character_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C0A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x253d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 177 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x4525F2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_character_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C0A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x253e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 178 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x452688</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_character_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C0A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x253f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 179 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x45334F</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_character_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C0A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2540</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 180 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x453436</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_character_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C0A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2541</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 181 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x454118</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_character_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C0A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2542</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 182 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x4541FC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_character_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C0A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2543</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 183 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x460766</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_equipment_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C14</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2544</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 184 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x4607FC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_equipment_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C14</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2545</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 185 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x460892</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_equipment_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C14</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2546</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 186 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x460928</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_equipment_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C14</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2547</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 187 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x4615CE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_equipment_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C14</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2548</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 188 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x4616B2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_equipment_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C14</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2549</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 189 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x43C8FA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_inventory_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C1E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x254a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 190 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x43C990</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_inventory_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C1E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x254b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 191 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x43CA26</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_inventory_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C1E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x254c</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 192 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x43CABC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_inventory_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C1E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x254d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 193 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x43D762</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_inventory_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C1E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x254e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 194 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x43D846</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_inventory_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C1E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x254f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 195 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x435CBE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_quest_log_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C28</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2550</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 196 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x435D54</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_quest_log_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C28</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2551</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 197 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x435DEA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_quest_log_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C28</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2552</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 198 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x435E80</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_quest_log_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C28</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2553</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 199 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x436B26</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_quest_log_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C28</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2554</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 200 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x436C0A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_quest_log_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C28</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2555</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 201 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x4693D6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_skillbook_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C32</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2556</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 202 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x46946C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_skillbook_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C32</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2557</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 203 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x469502</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_skillbook_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C32</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2558</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 204 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x469598</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_skillbook_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C32</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2559</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 205 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x46A23E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_skillbook_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C32</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x255a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 206 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x46A322</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_skillbook_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C32</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x255b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 207 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x40CEB2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>update_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x4726A9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>process_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437D33</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_process()</fn>
    </frame>
    <frame>
      <ip>0x45E144</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x255c</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 208 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x40CF96</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>update_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x4726A9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>process_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437D33</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_process()</fn>
    </frame>
    <frame>
      <ip>0x45E144</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x255d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 209 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x4545C7</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>update_character_window(int)</fn>
    </frame>
    <frame>
      <ip>0x4726B3</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>process_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437D33</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_process()</fn>
    </frame>
    <frame>
      <ip>0x45E144</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x255e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are possibly lost in loss record 210 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x4546AB</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>update_character_window(int)</fn>
    </frame>
    <frame>
      <ip>0x4726B3</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>process_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437D33</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_process()</fn>
    </frame>
    <frame>
      <ip>0x45E144</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x255f</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are definitely lost in loss record 211 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x460511</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>loading_screen_class::display(std::string)</fn>
    </frame>
    <frame>
      <ip>0x45DF6F</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2560</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are definitely lost in loss record 212 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x40ADE8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2561</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are definitely lost in loss record 213 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x40AED5</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2562</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are definitely lost in loss record 214 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x453A35</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_character_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C0A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2563</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are definitely lost in loss record 215 of 1,026</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47475A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_image(std::string)</fn>
    </frame>
    <frame>
      <ip>0x453B19</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_character_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C0A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x257d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>16 bytes in 1 blocks are possibly lost in loss record 241 of 1,026</text>
    <leakedbytes>16</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x474B79</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_spritesheet(std::string, int, int)</fn>
    </frame>
    <frame>
      <ip>0x41ADC7</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x257e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>16 bytes in 1 blocks are possibly lost in loss record 242 of 1,026</text>
    <leakedbytes>16</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x474B79</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_spritesheet(std::string, int, int)</fn>
    </frame>
    <frame>
      <ip>0x41AF15</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x257f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>16 bytes in 1 blocks are possibly lost in loss record 243 of 1,026</text>
    <leakedbytes>16</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x474B79</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_spritesheet(std::string, int, int)</fn>
    </frame>
    <frame>
      <ip>0x41B2FF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2580</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>16 bytes in 1 blocks are possibly lost in loss record 244 of 1,026</text>
    <leakedbytes>16</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x474B79</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_spritesheet(std::string, int, int)</fn>
    </frame>
    <frame>
      <ip>0x41B44D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2581</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>16 bytes in 1 blocks are possibly lost in loss record 245 of 1,026</text>
    <leakedbytes>16</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x474B79</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_spritesheet(std::string, int, int)</fn>
    </frame>
    <frame>
      <ip>0x41B59B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2582</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>16 bytes in 1 blocks are possibly lost in loss record 246 of 1,026</text>
    <leakedbytes>16</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x474B79</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_spritesheet(std::string, int, int)</fn>
    </frame>
    <frame>
      <ip>0x41B837</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2583</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>16 bytes in 1 blocks are possibly lost in loss record 247 of 1,026</text>
    <leakedbytes>16</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x474B79</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_spritesheet(std::string, int, int)</fn>
    </frame>
    <frame>
      <ip>0x41B985</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2584</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>16 bytes in 1 blocks are possibly lost in loss record 248 of 1,026</text>
    <leakedbytes>16</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x474B79</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_spritesheet(std::string, int, int)</fn>
    </frame>
    <frame>
      <ip>0x41BC21</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2585</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>16 bytes in 1 blocks are possibly lost in loss record 249 of 1,026</text>
    <leakedbytes>16</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x474B79</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_spritesheet(std::string, int, int)</fn>
    </frame>
    <frame>
      <ip>0x41BD6F</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25a7</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are possibly lost in loss record 283 of 1,026</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D88D1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x46325D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_main(int)</fn>
    </frame>
    <frame>
      <ip>0x437BC4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25a8</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are possibly lost in loss record 284 of 1,026</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D88D1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x463307</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_main(int)</fn>
    </frame>
    <frame>
      <ip>0x437BC4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25a9</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are possibly lost in loss record 285 of 1,026</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D88D1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x41E80D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_load(int)</fn>
    </frame>
    <frame>
      <ip>0x437BD8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25aa</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are possibly lost in loss record 286 of 1,026</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D88D1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x41E8B7</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_load(int)</fn>
    </frame>
    <frame>
      <ip>0x437BD8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25ab</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are possibly lost in loss record 287 of 1,026</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D88D1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x423521</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_save(int)</fn>
    </frame>
    <frame>
      <ip>0x437BE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25ac</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are possibly lost in loss record 288 of 1,026</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D88D1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x4235CB</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_save(int)</fn>
    </frame>
    <frame>
      <ip>0x437BE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25ad</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are possibly lost in loss record 289 of 1,026</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D88D1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x427FE7</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25ae</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are possibly lost in loss record 290 of 1,026</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D88D1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42809A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25af</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are possibly lost in loss record 291 of 1,026</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D88D1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x40A13C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25b0</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are possibly lost in loss record 292 of 1,026</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D88D1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x40A1EF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25b1</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are possibly lost in loss record 293 of 1,026</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D88D1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x43E117</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25b2</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are possibly lost in loss record 294 of 1,026</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D88D1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x43E1CA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25b3</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are possibly lost in loss record 295 of 1,026</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D88D1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x45273B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_character_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C0A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25b4</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are possibly lost in loss record 296 of 1,026</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D88D1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x4527EE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_character_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C0A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25b5</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are possibly lost in loss record 297 of 1,026</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D88D1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x4609D5</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_equipment_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C14</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25b6</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are possibly lost in loss record 298 of 1,026</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D88D1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x460A7F</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_equipment_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C14</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25b7</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are possibly lost in loss record 299 of 1,026</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D88D1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x43CB69</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_inventory_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C1E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25b8</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are possibly lost in loss record 300 of 1,026</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D88D1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x43CC13</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_inventory_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C1E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25b9</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are possibly lost in loss record 301 of 1,026</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D88D1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x435F2D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_quest_log_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C28</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25ba</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are possibly lost in loss record 302 of 1,026</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D88D1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x435FD7</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_quest_log_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C28</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25bb</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are possibly lost in loss record 303 of 1,026</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D88D1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x469645</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_skillbook_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C32</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25bc</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are possibly lost in loss record 304 of 1,026</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D88D1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x4696EF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_skillbook_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C32</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25c3</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>31 bytes in 1 blocks are possibly lost in loss record 311 of 1,026</text>
    <leakedbytes>31</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AB21A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AB2FF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AB60F</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::append(char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40D1E3</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>process_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437DBF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_process()</fn>
    </frame>
    <frame>
      <ip>0x45E199</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25c4</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>31 bytes in 1 blocks are possibly lost in loss record 312 of 1,026</text>
    <leakedbytes>31</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AB21A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AB2FF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AB60F</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::append(char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40D31C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>process_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437DBF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_process()</fn>
    </frame>
    <frame>
      <ip>0x45E199</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25c7</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>32 bytes in 1 blocks are possibly lost in loss record 315 of 1,026</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x474B79</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_spritesheet(std::string, int, int)</fn>
    </frame>
    <frame>
      <ip>0x41AB60</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25c9</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>32 bytes in 2 blocks are definitely lost in loss record 317 of 1,026</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>2</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x5DEB801</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.15.so</obj>
      <fn>strdup</fn>
      <dir>/build/buildd/eglibc-2.15/string</dir>
      <file>strdup.c</file>
      <line>43</line>
    </frame>
    <frame>
      <ip>0x6CE2AED</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libX11.so.6.3.0</obj>
    </frame>
    <frame>
      <ip>0x6CE3A03</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libX11.so.6.3.0</obj>
      <fn>_XimSetICValueData</fn>
    </frame>
    <frame>
      <ip>0x6CDF14E</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libX11.so.6.3.0</obj>
      <fn>_XimLocalCreateIC</fn>
    </frame>
    <frame>
      <ip>0x6CC4C02</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libX11.so.6.3.0</obj>
      <fn>XCreateIC</fn>
    </frame>
    <frame>
      <ip>0x4E74476</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
    </frame>
    <frame>
      <ip>0x4E753C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
    </frame>
    <frame>
      <ip>0x4E65A6C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
      <fn>SDL_VideoInit</fn>
    </frame>
    <frame>
      <ip>0x4E3C12B</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
      <fn>SDL_InitSubSystem</fn>
    </frame>
    <frame>
      <ip>0x4E3C19B</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
      <fn>SDL_Init</fn>
    </frame>
    <frame>
      <ip>0x45FDA0</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>graphics_class::init_sdl()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25ca</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>32 bytes in 2 blocks are definitely lost in loss record 318 of 1,026</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>2</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x5DEB801</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.15.so</obj>
      <fn>strdup</fn>
      <dir>/build/buildd/eglibc-2.15/string</dir>
      <file>strdup.c</file>
      <line>43</line>
    </frame>
    <frame>
      <ip>0x6CE2AED</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libX11.so.6.3.0</obj>
    </frame>
    <frame>
      <ip>0x6CE3A03</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libX11.so.6.3.0</obj>
      <fn>_XimSetICValueData</fn>
    </frame>
    <frame>
      <ip>0x6CDF14E</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libX11.so.6.3.0</obj>
      <fn>_XimLocalCreateIC</fn>
    </frame>
    <frame>
      <ip>0x6CC4C02</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libX11.so.6.3.0</obj>
      <fn>XCreateIC</fn>
    </frame>
    <frame>
      <ip>0x4E74476</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
    </frame>
    <frame>
      <ip>0x4E749C6</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
    </frame>
    <frame>
      <ip>0x4E74FBA</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
    </frame>
    <frame>
      <ip>0x4E65D5D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
      <fn>SDL_SetVideoMode</fn>
    </frame>
    <frame>
      <ip>0x45FE8A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>graphics_class::init_sdl()</fn>
    </frame>
    <frame>
      <ip>0x45DD78</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25cb</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>33 bytes in 1 blocks are possibly lost in loss record 319 of 1,026</text>
    <leakedbytes>33</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AB21A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AB2FF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AB60F</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::append(char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x442EBA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>process_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437DE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_process()</fn>
    </frame>
    <frame>
      <ip>0x45E199</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25cd</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>36 bytes in 1 blocks are possibly lost in loss record 321 of 1,026</text>
    <leakedbytes>36</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x44FE7D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>player_class::player_class()</fn>
    </frame>
    <frame>
      <ip>0x45E554</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::game_class()</fn>
    </frame>
    <frame>
      <ip>0x45F3DE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>__static_initialization_and_destruction_0(int, int)</fn>
    </frame>
    <frame>
      <ip>0x45F40A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>_GLOBAL__sub_I_game</fn>
    </frame>
    <frame>
      <ip>0x4D2CEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>__libc_csu_init</fn>
    </frame>
    <frame>
      <ip>0x5D846FF</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.15.so</obj>
      <fn>(below main)</fn>
      <dir>/build/buildd/eglibc-2.15/csu</dir>
      <file>libc-start.c</file>
      <line>185</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25ce</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>36 bytes in 1 blocks are possibly lost in loss record 322 of 1,026</text>
    <leakedbytes>36</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4296BD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25cf</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>36 bytes in 1 blocks are possibly lost in loss record 323 of 1,026</text>
    <leakedbytes>36</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x429703</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25d0</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>36 bytes in 1 blocks are possibly lost in loss record 324 of 1,026</text>
    <leakedbytes>36</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42974C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25d1</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>36 bytes in 1 blocks are possibly lost in loss record 325 of 1,026</text>
    <leakedbytes>36</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x429795</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25d2</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>36 bytes in 1 blocks are possibly lost in loss record 326 of 1,026</text>
    <leakedbytes>36</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4297DE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25d3</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>36 bytes in 1 blocks are possibly lost in loss record 327 of 1,026</text>
    <leakedbytes>36</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x429827</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25d4</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>36 bytes in 1 blocks are possibly lost in loss record 328 of 1,026</text>
    <leakedbytes>36</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x429870</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25d5</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>36 bytes in 1 blocks are possibly lost in loss record 329 of 1,026</text>
    <leakedbytes>36</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4298B9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25d6</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 330 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x463609</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_main(int)</fn>
    </frame>
    <frame>
      <ip>0x437BC4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25d7</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 331 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x464087</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_main(int)</fn>
    </frame>
    <frame>
      <ip>0x437BC4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25d8</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 332 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46487B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_main(int)</fn>
    </frame>
    <frame>
      <ip>0x437BC4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25d9</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 333 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x465071</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_main(int)</fn>
    </frame>
    <frame>
      <ip>0x437BC4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25da</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 334 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4658A4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_main(int)</fn>
    </frame>
    <frame>
      <ip>0x437BC4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25db</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 335 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4668C1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_main(int)</fn>
    </frame>
    <frame>
      <ip>0x437BC4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25dc</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 336 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46C2F4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25dd</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 337 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46CDBA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25de</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 338 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46D5B0</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25df</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 339 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x41EBD6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_load(int)</fn>
    </frame>
    <frame>
      <ip>0x437BD8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25e0</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 340 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x41F66D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_load(int)</fn>
    </frame>
    <frame>
      <ip>0x437BD8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25e1</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 341 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x41FE9E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_load(int)</fn>
    </frame>
    <frame>
      <ip>0x437BD8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25e2</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 342 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4206D1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_load(int)</fn>
    </frame>
    <frame>
      <ip>0x437BD8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25e3</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 343 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x420F04</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_load(int)</fn>
    </frame>
    <frame>
      <ip>0x437BD8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25e4</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 344 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x421737</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_load(int)</fn>
    </frame>
    <frame>
      <ip>0x437BD8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25e5</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 345 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x421F6A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_load(int)</fn>
    </frame>
    <frame>
      <ip>0x437BD8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25e6</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 346 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4238CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_save(int)</fn>
    </frame>
    <frame>
      <ip>0x437BE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25e7</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 347 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42434B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_save(int)</fn>
    </frame>
    <frame>
      <ip>0x437BE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25e8</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 348 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x424B3F</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_save(int)</fn>
    </frame>
    <frame>
      <ip>0x437BE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25e9</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 349 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x425335</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_save(int)</fn>
    </frame>
    <frame>
      <ip>0x437BE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25ea</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 350 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x425B2B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_save(int)</fn>
    </frame>
    <frame>
      <ip>0x437BE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25eb</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 351 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x426321</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_save(int)</fn>
    </frame>
    <frame>
      <ip>0x437BE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25ec</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 352 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x426B17</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_save(int)</fn>
    </frame>
    <frame>
      <ip>0x437BE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25ed</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 353 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4283A8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25ee</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 354 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x428E38</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25ef</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 355 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42FD27</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25f0</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 356 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4317CB</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25f1</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 357 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x432243</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25f2</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 358 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x43F770</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25f3</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 359 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x44000F</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25f4</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 360 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4408AE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25f5</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 361 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x44114D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25f6</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 362 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4419EC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25f7</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 363 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x442279</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25f8</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 364 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x452AFC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_character_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C0A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25f9</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 365 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x460D81</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_equipment_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C14</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25fa</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 366 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x43CF15</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_inventory_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C1E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25fb</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 367 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4362D9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_quest_log_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C28</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25fc</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 368 of 1,026</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4699F1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_skillbook_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C32</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2602</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>40 bytes in 1 blocks are possibly lost in loss record 374 of 1,026</text>
    <leakedbytes>40</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x474B79</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_spritesheet(std::string, int, int)</fn>
    </frame>
    <frame>
      <ip>0x41B063</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2603</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>40 bytes in 1 blocks are possibly lost in loss record 375 of 1,026</text>
    <leakedbytes>40</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x474B79</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_spritesheet(std::string, int, int)</fn>
    </frame>
    <frame>
      <ip>0x41B1B1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2604</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>40 bytes in 1 blocks are possibly lost in loss record 376 of 1,026</text>
    <leakedbytes>40</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x474B79</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_spritesheet(std::string, int, int)</fn>
    </frame>
    <frame>
      <ip>0x41B6E9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2605</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>40 bytes in 1 blocks are possibly lost in loss record 377 of 1,026</text>
    <leakedbytes>40</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x474B79</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_spritesheet(std::string, int, int)</fn>
    </frame>
    <frame>
      <ip>0x41BAD3</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2618</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>48 bytes in 1 blocks are possibly lost in loss record 396 of 1,026</text>
    <leakedbytes>48</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46333C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_main(int)</fn>
    </frame>
    <frame>
      <ip>0x437BC4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2619</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>48 bytes in 1 blocks are possibly lost in loss record 397 of 1,026</text>
    <leakedbytes>48</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46C01E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x261a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>48 bytes in 1 blocks are possibly lost in loss record 398 of 1,026</text>
    <leakedbytes>48</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x41E8EC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_load(int)</fn>
    </frame>
    <frame>
      <ip>0x437BD8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x261b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>48 bytes in 1 blocks are possibly lost in loss record 399 of 1,026</text>
    <leakedbytes>48</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x423600</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_save(int)</fn>
    </frame>
    <frame>
      <ip>0x437BE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x261c</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>48 bytes in 1 blocks are possibly lost in loss record 400 of 1,026</text>
    <leakedbytes>48</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4280D2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x261d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>48 bytes in 1 blocks are possibly lost in loss record 401 of 1,026</text>
    <leakedbytes>48</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40A227</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x261e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>48 bytes in 1 blocks are possibly lost in loss record 402 of 1,026</text>
    <leakedbytes>48</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x43E202</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x261f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>48 bytes in 1 blocks are possibly lost in loss record 403 of 1,026</text>
    <leakedbytes>48</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x452826</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_character_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C0A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2620</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>48 bytes in 1 blocks are possibly lost in loss record 404 of 1,026</text>
    <leakedbytes>48</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x460AB4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_equipment_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C14</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2621</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>48 bytes in 1 blocks are possibly lost in loss record 405 of 1,026</text>
    <leakedbytes>48</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x43CC48</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_inventory_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C1E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2622</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>48 bytes in 1 blocks are possibly lost in loss record 406 of 1,026</text>
    <leakedbytes>48</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x43600C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_quest_log_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C28</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2623</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>48 bytes in 1 blocks are possibly lost in loss record 407 of 1,026</text>
    <leakedbytes>48</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x469724</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_skillbook_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C32</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2624</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>57 bytes in 1 blocks are possibly lost in loss record 408 of 1,026</text>
    <leakedbytes>57</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4632AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_main(int)</fn>
    </frame>
    <frame>
      <ip>0x437BC4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2625</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>57 bytes in 1 blocks are possibly lost in loss record 409 of 1,026</text>
    <leakedbytes>57</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46BF88</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2626</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>57 bytes in 1 blocks are possibly lost in loss record 410 of 1,026</text>
    <leakedbytes>57</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x41E85F</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_load(int)</fn>
    </frame>
    <frame>
      <ip>0x437BD8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2627</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>57 bytes in 1 blocks are possibly lost in loss record 411 of 1,026</text>
    <leakedbytes>57</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x423573</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_save(int)</fn>
    </frame>
    <frame>
      <ip>0x437BE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2628</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>57 bytes in 1 blocks are possibly lost in loss record 412 of 1,026</text>
    <leakedbytes>57</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42803C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2629</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>57 bytes in 1 blocks are possibly lost in loss record 413 of 1,026</text>
    <leakedbytes>57</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40A191</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x262a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>57 bytes in 1 blocks are possibly lost in loss record 414 of 1,026</text>
    <leakedbytes>57</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x43E16C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x262b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>57 bytes in 1 blocks are possibly lost in loss record 415 of 1,026</text>
    <leakedbytes>57</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x452790</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_character_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C0A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x262c</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>57 bytes in 1 blocks are possibly lost in loss record 416 of 1,026</text>
    <leakedbytes>57</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x460A27</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_equipment_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C14</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x262d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>57 bytes in 1 blocks are possibly lost in loss record 417 of 1,026</text>
    <leakedbytes>57</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x43CBBB</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_inventory_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C1E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x262e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>57 bytes in 1 blocks are possibly lost in loss record 418 of 1,026</text>
    <leakedbytes>57</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x435F7F</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_quest_log_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C28</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x262f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>57 bytes in 1 blocks are possibly lost in loss record 419 of 1,026</text>
    <leakedbytes>57</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x469697</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_skillbook_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C32</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2630</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>58 bytes in 1 blocks are possibly lost in loss record 420 of 1,026</text>
    <leakedbytes>58</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4ABCA4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x4ABDE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x41A2C6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2631</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>58 bytes in 1 blocks are possibly lost in loss record 421 of 1,026</text>
    <leakedbytes>58</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4ABCA4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x4ABDE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x41A2F6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2632</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>58 bytes in 1 blocks are possibly lost in loss record 422 of 1,026</text>
    <leakedbytes>58</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4ABCA4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x4ABDE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x41A326</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2633</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>58 bytes in 1 blocks are possibly lost in loss record 423 of 1,026</text>
    <leakedbytes>58</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4ABCA4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x4ABDE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x41A356</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2634</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>58 bytes in 1 blocks are possibly lost in loss record 424 of 1,026</text>
    <leakedbytes>58</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4ABCA4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x4ABDE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x41A386</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2635</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>58 bytes in 1 blocks are possibly lost in loss record 425 of 1,026</text>
    <leakedbytes>58</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4ABCA4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x4ABDE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x41A3B6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2636</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>58 bytes in 1 blocks are possibly lost in loss record 426 of 1,026</text>
    <leakedbytes>58</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4ABCA4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x4ABDE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x41A3E6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2637</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>58 bytes in 1 blocks are possibly lost in loss record 427 of 1,026</text>
    <leakedbytes>58</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4ABCA4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x4ABDE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x41A596</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2639</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>59 bytes in 1 blocks are possibly lost in loss record 429 of 1,026</text>
    <leakedbytes>59</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x463205</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_main(int)</fn>
    </frame>
    <frame>
      <ip>0x437BC4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x263a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>59 bytes in 1 blocks are possibly lost in loss record 430 of 1,026</text>
    <leakedbytes>59</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46BED5</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x263b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>59 bytes in 1 blocks are possibly lost in loss record 431 of 1,026</text>
    <leakedbytes>59</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x41E7B5</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_load(int)</fn>
    </frame>
    <frame>
      <ip>0x437BD8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x263c</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>59 bytes in 1 blocks are possibly lost in loss record 432 of 1,026</text>
    <leakedbytes>59</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4234C9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_save(int)</fn>
    </frame>
    <frame>
      <ip>0x437BE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x263d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>59 bytes in 1 blocks are possibly lost in loss record 433 of 1,026</text>
    <leakedbytes>59</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x427F89</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x263e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>59 bytes in 1 blocks are possibly lost in loss record 434 of 1,026</text>
    <leakedbytes>59</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40A0DE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x263f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>59 bytes in 1 blocks are possibly lost in loss record 435 of 1,026</text>
    <leakedbytes>59</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x43E0B9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2640</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>59 bytes in 1 blocks are possibly lost in loss record 436 of 1,026</text>
    <leakedbytes>59</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4526DD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_character_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C0A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2641</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>59 bytes in 1 blocks are possibly lost in loss record 437 of 1,026</text>
    <leakedbytes>59</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46097D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_equipment_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C14</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2642</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>59 bytes in 1 blocks are possibly lost in loss record 438 of 1,026</text>
    <leakedbytes>59</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x43CB11</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_inventory_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C1E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2643</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>59 bytes in 1 blocks are possibly lost in loss record 439 of 1,026</text>
    <leakedbytes>59</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x435ED5</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_quest_log_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C28</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2644</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>59 bytes in 1 blocks are possibly lost in loss record 440 of 1,026</text>
    <leakedbytes>59</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4695ED</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_skillbook_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C32</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2645</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>61 bytes in 1 blocks are possibly lost in loss record 441 of 1,026</text>
    <leakedbytes>61</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x433396</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2646</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>63 bytes in 1 blocks are possibly lost in loss record 442 of 1,026</text>
    <leakedbytes>63</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x463DC4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_main(int)</fn>
    </frame>
    <frame>
      <ip>0x437BC4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2647</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>63 bytes in 1 blocks are possibly lost in loss record 443 of 1,026</text>
    <leakedbytes>63</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46CAE5</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2648</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>63 bytes in 1 blocks are possibly lost in loss record 444 of 1,026</text>
    <leakedbytes>63</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46EAE3</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2649</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>63 bytes in 1 blocks are possibly lost in loss record 445 of 1,026</text>
    <leakedbytes>63</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46F617</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x264a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>63 bytes in 1 blocks are possibly lost in loss record 446 of 1,026</text>
    <leakedbytes>63</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x41F3AA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_load(int)</fn>
    </frame>
    <frame>
      <ip>0x437BD8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x264b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>63 bytes in 1 blocks are possibly lost in loss record 447 of 1,026</text>
    <leakedbytes>63</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x424088</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_save(int)</fn>
    </frame>
    <frame>
      <ip>0x437BE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x264c</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>63 bytes in 1 blocks are possibly lost in loss record 448 of 1,026</text>
    <leakedbytes>63</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x428B63</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x264d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>63 bytes in 1 blocks are possibly lost in loss record 449 of 1,026</text>
    <leakedbytes>63</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42E17A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x264e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>63 bytes in 1 blocks are possibly lost in loss record 450 of 1,026</text>
    <leakedbytes>63</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42E954</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x264f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>63 bytes in 1 blocks are possibly lost in loss record 451 of 1,026</text>
    <leakedbytes>63</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42F132</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2650</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>63 bytes in 1 blocks are possibly lost in loss record 452 of 1,026</text>
    <leakedbytes>63</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42F944</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2651</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>63 bytes in 1 blocks are possibly lost in loss record 453 of 1,026</text>
    <leakedbytes>63</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x430BD4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2652</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>63 bytes in 1 blocks are possibly lost in loss record 454 of 1,026</text>
    <leakedbytes>63</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4313E8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2653</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>63 bytes in 1 blocks are possibly lost in loss record 455 of 1,026</text>
    <leakedbytes>63</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x43355E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2654</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>63 bytes in 1 blocks are possibly lost in loss record 456 of 1,026</text>
    <leakedbytes>63</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40C2F8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2655</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>63 bytes in 1 blocks are possibly lost in loss record 457 of 1,026</text>
    <leakedbytes>63</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40C3DC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2656</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>63 bytes in 1 blocks are possibly lost in loss record 458 of 1,026</text>
    <leakedbytes>63</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4532B7</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_character_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C0A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2657</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>63 bytes in 1 blocks are possibly lost in loss record 459 of 1,026</text>
    <leakedbytes>63</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46153C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_equipment_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C14</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2658</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>63 bytes in 1 blocks are possibly lost in loss record 460 of 1,026</text>
    <leakedbytes>63</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x43D6D0</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_inventory_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C1E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2659</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>63 bytes in 1 blocks are possibly lost in loss record 461 of 1,026</text>
    <leakedbytes>63</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x436A94</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_quest_log_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C28</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x265a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>63 bytes in 1 blocks are possibly lost in loss record 462 of 1,026</text>
    <leakedbytes>63</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46A1AC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_skillbook_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C32</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26ac</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 544 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x462F90</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_main(int)</fn>
    </frame>
    <frame>
      <ip>0x437BC4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26ad</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 545 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x463026</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_main(int)</fn>
    </frame>
    <frame>
      <ip>0x437BC4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26ae</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 546 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46BC60</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26af</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 547 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46BCF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26b0</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 548 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x47018E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26b1</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 549 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x470849</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26b2</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 550 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x470F07</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26b3</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 551 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4715BC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26b4</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 552 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x471C71</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26b5</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 553 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x41E540</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_load(int)</fn>
    </frame>
    <frame>
      <ip>0x437BD8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26b6</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 554 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x41E5D6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_load(int)</fn>
    </frame>
    <frame>
      <ip>0x437BD8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26b7</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 555 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x423254</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_save(int)</fn>
    </frame>
    <frame>
      <ip>0x437BE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26b8</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 556 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4232EA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_save(int)</fn>
    </frame>
    <frame>
      <ip>0x437BE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26b9</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 557 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x427D14</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26ba</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 558 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x427DAA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26bb</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 559 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x429D9D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26bc</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 560 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x429E8A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26bd</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 561 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x429F77</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26be</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 562 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42A5A9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26bf</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 563 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42A783</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26c0</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 564 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42A870</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26c1</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 565 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42B1C0</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26c2</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 566 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42B39A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26c3</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 567 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42B487</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26c4</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 568 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42BDDA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26c5</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 569 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42BFB4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26c6</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 570 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42C0A1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26c7</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 571 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42C9F4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26c8</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 572 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42CBCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26c9</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 573 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42CCBB</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26ca</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 574 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42D60E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26cb</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 575 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42D7E8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26cc</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 576 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42D8D5</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26cd</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 577 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x430175</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26ce</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 578 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x43034F</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26cf</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 579 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x431C1B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26d0</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 580 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x431DF5</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26d1</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 581 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x409EFF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26d2</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 582 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x43DEDA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26d3</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 583 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x43FC10</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26d4</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 584 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x43FCFD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26d5</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 585 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4404AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26d6</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 586 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x44059C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26d7</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 587 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x440D4E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26d8</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 588 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x440E3B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26d9</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 589 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4415ED</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26da</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 590 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4416DA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26db</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 591 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x441E8C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26dc</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 592 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x441F70</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26dd</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 593 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x442719</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26de</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 594 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4427FD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26df</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 595 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x452468</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_character_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C0A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26e0</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 596 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4524FE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_character_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C0A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26e1</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 597 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x460708</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_equipment_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C14</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26e2</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 598 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46079E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_equipment_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C14</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26e3</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 599 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x43C89C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_inventory_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C1E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26e4</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 600 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x43C932</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_inventory_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C1E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26e5</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 601 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x435C60</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_quest_log_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C28</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26e6</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 602 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x435CF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_quest_log_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C28</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26e7</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 603 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x469378</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_skillbook_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C32</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26e8</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 604 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46940E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_skillbook_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C32</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26e9</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 2 blocks are possibly lost in loss record 605 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>2</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40D6C1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>location_class::location_class()</fn>
    </frame>
    <frame>
      <ip>0x40D7EA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_element_class::window_element_class()</fn>
    </frame>
    <frame>
      <ip>0x41EF68</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_load(int)</fn>
    </frame>
    <frame>
      <ip>0x437BD8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26ea</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 2 blocks are possibly lost in loss record 606 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>2</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40D6C1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>location_class::location_class()</fn>
    </frame>
    <frame>
      <ip>0x40D7EA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_element_class::window_element_class()</fn>
    </frame>
    <frame>
      <ip>0x423C7C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_save(int)</fn>
    </frame>
    <frame>
      <ip>0x437BE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26eb</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 2 blocks are possibly lost in loss record 607 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>2</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40D6C1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>location_class::location_class()</fn>
    </frame>
    <frame>
      <ip>0x40D7FC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_element_class::window_element_class()</fn>
    </frame>
    <frame>
      <ip>0x43E86A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26ec</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 2 blocks are possibly lost in loss record 608 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>2</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40D6C1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>location_class::location_class()</fn>
    </frame>
    <frame>
      <ip>0x40D7EA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_element_class::window_element_class()</fn>
    </frame>
    <frame>
      <ip>0x461130</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_equipment_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C14</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26ed</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 2 blocks are possibly lost in loss record 609 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>2</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40D6C1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>location_class::location_class()</fn>
    </frame>
    <frame>
      <ip>0x40D7FC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_element_class::window_element_class()</fn>
    </frame>
    <frame>
      <ip>0x461130</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_equipment_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C14</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26ee</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 2 blocks are possibly lost in loss record 610 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>2</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40D6C1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>location_class::location_class()</fn>
    </frame>
    <frame>
      <ip>0x40D7EA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_element_class::window_element_class()</fn>
    </frame>
    <frame>
      <ip>0x43D2C4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_inventory_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C1E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26ef</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 2 blocks are possibly lost in loss record 611 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>2</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40D6C1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>location_class::location_class()</fn>
    </frame>
    <frame>
      <ip>0x40D7FC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_element_class::window_element_class()</fn>
    </frame>
    <frame>
      <ip>0x43D2C4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_inventory_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C1E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26f0</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 2 blocks are possibly lost in loss record 612 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>2</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40D6C1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>location_class::location_class()</fn>
    </frame>
    <frame>
      <ip>0x40D7EA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_element_class::window_element_class()</fn>
    </frame>
    <frame>
      <ip>0x436688</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_quest_log_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C28</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26f1</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 2 blocks are possibly lost in loss record 613 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>2</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40D6C1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>location_class::location_class()</fn>
    </frame>
    <frame>
      <ip>0x40D7FC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_element_class::window_element_class()</fn>
    </frame>
    <frame>
      <ip>0x436688</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_quest_log_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C28</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26f2</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 2 blocks are possibly lost in loss record 614 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>2</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40D6C1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>location_class::location_class()</fn>
    </frame>
    <frame>
      <ip>0x40D7EA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_element_class::window_element_class()</fn>
    </frame>
    <frame>
      <ip>0x469DA0</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_skillbook_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C32</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26f3</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 2 blocks are possibly lost in loss record 615 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>2</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40D6C1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>location_class::location_class()</fn>
    </frame>
    <frame>
      <ip>0x40D7FC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_element_class::window_element_class()</fn>
    </frame>
    <frame>
      <ip>0x469DA0</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_skillbook_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C32</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26f4</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are definitely lost in loss record 616 of 1,026</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4E4437D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
      <fn>SDL_AllocRW</fn>
    </frame>
    <frame>
      <ip>0x4E444A7</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
      <fn>SDL_RWFromFP</fn>
    </frame>
    <frame>
      <ip>0x50DD1AF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>MOD_new</fn>
    </frame>
    <frame>
      <ip>0x50DB288</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadMUS</fn>
    </frame>
    <frame>
      <ip>0x44AF75</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>music_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x45E005</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26f5</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>65 bytes in 1 blocks are possibly lost in loss record 617 of 1,026</text>
    <leakedbytes>65</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46ECBD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26f6</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>65 bytes in 1 blocks are possibly lost in loss record 618 of 1,026</text>
    <leakedbytes>65</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46F7F1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26f7</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>65 bytes in 1 blocks are possibly lost in loss record 619 of 1,026</text>
    <leakedbytes>65</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42E354</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26f8</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>65 bytes in 1 blocks are possibly lost in loss record 620 of 1,026</text>
    <leakedbytes>65</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42EB2E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26f9</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>65 bytes in 1 blocks are possibly lost in loss record 621 of 1,026</text>
    <leakedbytes>65</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42F30C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26fa</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>65 bytes in 1 blocks are possibly lost in loss record 622 of 1,026</text>
    <leakedbytes>65</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42FB1E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26fb</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>65 bytes in 1 blocks are possibly lost in loss record 623 of 1,026</text>
    <leakedbytes>65</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x430DAE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26fc</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>65 bytes in 1 blocks are possibly lost in loss record 624 of 1,026</text>
    <leakedbytes>65</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4315C2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26fd</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>65 bytes in 1 blocks are possibly lost in loss record 625 of 1,026</text>
    <leakedbytes>65</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40BB3D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26fe</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>65 bytes in 1 blocks are possibly lost in loss record 626 of 1,026</text>
    <leakedbytes>65</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40BC2A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26ff</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>66 bytes in 1 blocks are possibly lost in loss record 627 of 1,026</text>
    <leakedbytes>66</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x463152</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_main(int)</fn>
    </frame>
    <frame>
      <ip>0x437BC4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2700</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>66 bytes in 1 blocks are possibly lost in loss record 628 of 1,026</text>
    <leakedbytes>66</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46BE22</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2701</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>66 bytes in 1 blocks are possibly lost in loss record 629 of 1,026</text>
    <leakedbytes>66</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x41E702</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_load(int)</fn>
    </frame>
    <frame>
      <ip>0x437BD8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2702</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>66 bytes in 1 blocks are possibly lost in loss record 630 of 1,026</text>
    <leakedbytes>66</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x423416</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_save(int)</fn>
    </frame>
    <frame>
      <ip>0x437BE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2703</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>66 bytes in 1 blocks are possibly lost in loss record 631 of 1,026</text>
    <leakedbytes>66</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x427ED6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2704</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>66 bytes in 1 blocks are possibly lost in loss record 632 of 1,026</text>
    <leakedbytes>66</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42A696</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2705</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>66 bytes in 1 blocks are possibly lost in loss record 633 of 1,026</text>
    <leakedbytes>66</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42B2AD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2706</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>66 bytes in 1 blocks are possibly lost in loss record 634 of 1,026</text>
    <leakedbytes>66</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42BEC7</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2707</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>66 bytes in 1 blocks are possibly lost in loss record 635 of 1,026</text>
    <leakedbytes>66</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42CAE1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2708</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>66 bytes in 1 blocks are possibly lost in loss record 636 of 1,026</text>
    <leakedbytes>66</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42D6FB</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2709</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>66 bytes in 1 blocks are possibly lost in loss record 637 of 1,026</text>
    <leakedbytes>66</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40A02B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x270a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>66 bytes in 1 blocks are possibly lost in loss record 638 of 1,026</text>
    <leakedbytes>66</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x43E006</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x270b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>66 bytes in 1 blocks are possibly lost in loss record 639 of 1,026</text>
    <leakedbytes>66</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x45262A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_character_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C0A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x270c</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>66 bytes in 1 blocks are possibly lost in loss record 640 of 1,026</text>
    <leakedbytes>66</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4608CA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_equipment_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C14</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x270d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>66 bytes in 1 blocks are possibly lost in loss record 641 of 1,026</text>
    <leakedbytes>66</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x43CA5E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_inventory_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C1E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x270e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>66 bytes in 1 blocks are possibly lost in loss record 642 of 1,026</text>
    <leakedbytes>66</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x435E22</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_quest_log_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C28</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x270f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>66 bytes in 1 blocks are possibly lost in loss record 643 of 1,026</text>
    <leakedbytes>66</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46953A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_skillbook_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C32</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2710</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>67 bytes in 1 blocks are possibly lost in loss record 644 of 1,026</text>
    <leakedbytes>67</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46DE5F</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2711</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>67 bytes in 1 blocks are possibly lost in loss record 645 of 1,026</text>
    <leakedbytes>67</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4ABCA4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x4ABDE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x46DE83</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2712</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>67 bytes in 1 blocks are possibly lost in loss record 646 of 1,026</text>
    <leakedbytes>67</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46DEF3</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2713</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>67 bytes in 1 blocks are possibly lost in loss record 647 of 1,026</text>
    <leakedbytes>67</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4ABCA4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x4ABDE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x46DF17</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2714</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>67 bytes in 1 blocks are possibly lost in loss record 648 of 1,026</text>
    <leakedbytes>67</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46DF87</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2715</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>67 bytes in 1 blocks are possibly lost in loss record 649 of 1,026</text>
    <leakedbytes>67</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4ABCA4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x4ABDE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x46DFAB</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2716</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>67 bytes in 1 blocks are possibly lost in loss record 650 of 1,026</text>
    <leakedbytes>67</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46E01E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2717</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>67 bytes in 1 blocks are possibly lost in loss record 651 of 1,026</text>
    <leakedbytes>67</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4ABCA4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x4ABDE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x46E042</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2718</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>67 bytes in 1 blocks are possibly lost in loss record 652 of 1,026</text>
    <leakedbytes>67</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46E0B5</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2719</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>67 bytes in 1 blocks are possibly lost in loss record 653 of 1,026</text>
    <leakedbytes>67</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4ABCA4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x4ABDE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x46E0D9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x271a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>67 bytes in 1 blocks are possibly lost in loss record 654 of 1,026</text>
    <leakedbytes>67</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46E14C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x271b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>67 bytes in 1 blocks are possibly lost in loss record 655 of 1,026</text>
    <leakedbytes>67</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4ABCA4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x4ABDE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x46E170</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x271c</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>67 bytes in 1 blocks are possibly lost in loss record 656 of 1,026</text>
    <leakedbytes>67</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46E1E3</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x271d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>67 bytes in 1 blocks are possibly lost in loss record 657 of 1,026</text>
    <leakedbytes>67</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4ABCA4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x4ABDE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x46E207</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x271e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>67 bytes in 1 blocks are possibly lost in loss record 658 of 1,026</text>
    <leakedbytes>67</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46E27A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x271f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>67 bytes in 1 blocks are possibly lost in loss record 659 of 1,026</text>
    <leakedbytes>67</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4ABCA4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x4ABDE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x46E29E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2720</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>67 bytes in 1 blocks are possibly lost in loss record 660 of 1,026</text>
    <leakedbytes>67</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46E311</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2721</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>67 bytes in 1 blocks are possibly lost in loss record 661 of 1,026</text>
    <leakedbytes>67</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4ABCA4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x4ABDE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x46E335</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2722</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>67 bytes in 1 blocks are possibly lost in loss record 662 of 1,026</text>
    <leakedbytes>67</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46E3A8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2723</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>67 bytes in 1 blocks are possibly lost in loss record 663 of 1,026</text>
    <leakedbytes>67</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4ABCA4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x4ABDE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x46E3CC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2724</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>67 bytes in 1 blocks are possibly lost in loss record 664 of 1,026</text>
    <leakedbytes>67</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46E43F</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2725</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>67 bytes in 1 blocks are possibly lost in loss record 665 of 1,026</text>
    <leakedbytes>67</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4ABCA4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x4ABDE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x46E463</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2726</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>67 bytes in 1 blocks are possibly lost in loss record 666 of 1,026</text>
    <leakedbytes>67</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46E4D6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2727</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>67 bytes in 1 blocks are possibly lost in loss record 667 of 1,026</text>
    <leakedbytes>67</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4ABCA4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x4ABDE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x46E4FA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2728</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>67 bytes in 1 blocks are possibly lost in loss record 668 of 1,026</text>
    <leakedbytes>67</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46E56D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2729</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>67 bytes in 1 blocks are possibly lost in loss record 669 of 1,026</text>
    <leakedbytes>67</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4ABCA4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x4ABDE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x46E591</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x272a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>67 bytes in 1 blocks are possibly lost in loss record 670 of 1,026</text>
    <leakedbytes>67</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40C90F</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x272b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>67 bytes in 1 blocks are possibly lost in loss record 671 of 1,026</text>
    <leakedbytes>67</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40C9F3</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x272c</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>67 bytes in 1 blocks are possibly lost in loss record 672 of 1,026</text>
    <leakedbytes>67</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x43DE44</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x272d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>68 bytes in 1 blocks are possibly lost in loss record 673 of 1,026</text>
    <leakedbytes>68</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46EBD0</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x272e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>68 bytes in 1 blocks are possibly lost in loss record 674 of 1,026</text>
    <leakedbytes>68</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46F704</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x272f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>68 bytes in 1 blocks are possibly lost in loss record 675 of 1,026</text>
    <leakedbytes>68</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42E267</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2730</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>68 bytes in 1 blocks are possibly lost in loss record 676 of 1,026</text>
    <leakedbytes>68</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42EA41</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2731</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>68 bytes in 1 blocks are possibly lost in loss record 677 of 1,026</text>
    <leakedbytes>68</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42F21F</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2732</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>68 bytes in 1 blocks are possibly lost in loss record 678 of 1,026</text>
    <leakedbytes>68</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42FA31</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2733</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>68 bytes in 1 blocks are possibly lost in loss record 679 of 1,026</text>
    <leakedbytes>68</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x430CC1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2734</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>68 bytes in 1 blocks are possibly lost in loss record 680 of 1,026</text>
    <leakedbytes>68</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4314D5</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2736</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>69 bytes in 1 blocks are possibly lost in loss record 682 of 1,026</text>
    <leakedbytes>69</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4630BC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_main(int)</fn>
    </frame>
    <frame>
      <ip>0x437BC4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2737</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>69 bytes in 1 blocks are possibly lost in loss record 683 of 1,026</text>
    <leakedbytes>69</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46BD8C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2738</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>69 bytes in 1 blocks are possibly lost in loss record 684 of 1,026</text>
    <leakedbytes>69</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x41E66C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_load(int)</fn>
    </frame>
    <frame>
      <ip>0x437BD8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2739</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>69 bytes in 1 blocks are possibly lost in loss record 685 of 1,026</text>
    <leakedbytes>69</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x423380</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_save(int)</fn>
    </frame>
    <frame>
      <ip>0x437BE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x273a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>69 bytes in 1 blocks are possibly lost in loss record 686 of 1,026</text>
    <leakedbytes>69</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x427E40</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x273b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>69 bytes in 1 blocks are possibly lost in loss record 687 of 1,026</text>
    <leakedbytes>69</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x430262</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x273c</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>69 bytes in 1 blocks are possibly lost in loss record 688 of 1,026</text>
    <leakedbytes>69</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x431D08</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x273d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>69 bytes in 1 blocks are possibly lost in loss record 689 of 1,026</text>
    <leakedbytes>69</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x409F95</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x273e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>69 bytes in 1 blocks are possibly lost in loss record 690 of 1,026</text>
    <leakedbytes>69</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x43DF70</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x273f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>69 bytes in 1 blocks are possibly lost in loss record 691 of 1,026</text>
    <leakedbytes>69</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x452594</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_character_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C0A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2740</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>69 bytes in 1 blocks are possibly lost in loss record 692 of 1,026</text>
    <leakedbytes>69</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x460834</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_equipment_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C14</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2741</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>69 bytes in 1 blocks are possibly lost in loss record 693 of 1,026</text>
    <leakedbytes>69</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x43C9C8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_inventory_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C1E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2742</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>69 bytes in 1 blocks are possibly lost in loss record 694 of 1,026</text>
    <leakedbytes>69</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x435D8C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_quest_log_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C28</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2743</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>69 bytes in 1 blocks are possibly lost in loss record 695 of 1,026</text>
    <leakedbytes>69</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4694A4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_skillbook_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C32</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2744</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>71 bytes in 1 blocks are possibly lost in loss record 696 of 1,026</text>
    <leakedbytes>71</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x43EDE9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2745</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>71 bytes in 1 blocks are possibly lost in loss record 697 of 1,026</text>
    <leakedbytes>71</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x43EED6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2753</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>73 bytes in 1 blocks are possibly lost in loss record 711 of 1,026</text>
    <leakedbytes>73</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x43347A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2754</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>73 bytes in 1 blocks are possibly lost in loss record 712 of 1,026</text>
    <leakedbytes>73</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x409E69</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2755</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>73 bytes in 1 blocks are possibly lost in loss record 713 of 1,026</text>
    <leakedbytes>73</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x43F3E5</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2756</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>73 bytes in 1 blocks are possibly lost in loss record 714 of 1,026</text>
    <leakedbytes>73</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x43F4D2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2757</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>75 bytes in 1 blocks are possibly lost in loss record 715 of 1,026</text>
    <leakedbytes>75</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x463EA8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_main(int)</fn>
    </frame>
    <frame>
      <ip>0x437BC4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2758</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>75 bytes in 1 blocks are possibly lost in loss record 716 of 1,026</text>
    <leakedbytes>75</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46CBD2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2759</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>75 bytes in 1 blocks are possibly lost in loss record 717 of 1,026</text>
    <leakedbytes>75</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x41F48E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_load(int)</fn>
    </frame>
    <frame>
      <ip>0x437BD8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x275a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>75 bytes in 1 blocks are possibly lost in loss record 718 of 1,026</text>
    <leakedbytes>75</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x42416C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_save(int)</fn>
    </frame>
    <frame>
      <ip>0x437BE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x275b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>75 bytes in 1 blocks are possibly lost in loss record 719 of 1,026</text>
    <leakedbytes>75</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x428C50</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x275c</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>75 bytes in 1 blocks are possibly lost in loss record 720 of 1,026</text>
    <leakedbytes>75</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x433642</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x275d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>75 bytes in 1 blocks are possibly lost in loss record 721 of 1,026</text>
    <leakedbytes>75</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4533A4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_character_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C0A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x275e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>75 bytes in 1 blocks are possibly lost in loss record 722 of 1,026</text>
    <leakedbytes>75</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x461620</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_equipment_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C14</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x275f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>75 bytes in 1 blocks are possibly lost in loss record 723 of 1,026</text>
    <leakedbytes>75</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x43D7B4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_inventory_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C1E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2760</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>75 bytes in 1 blocks are possibly lost in loss record 724 of 1,026</text>
    <leakedbytes>75</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x436B78</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_quest_log_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C28</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2761</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>75 bytes in 1 blocks are possibly lost in loss record 725 of 1,026</text>
    <leakedbytes>75</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46A290</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_skillbook_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C32</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2762</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>78 bytes in 1 blocks are possibly lost in loss record 726 of 1,026</text>
    <leakedbytes>78</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40B379</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2763</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>78 bytes in 1 blocks are possibly lost in loss record 727 of 1,026</text>
    <leakedbytes>78</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40B466</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2772</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>80 bytes in 1 blocks are possibly lost in loss record 742 of 1,026</text>
    <leakedbytes>80</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x454086</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_character_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C0A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2773</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>80 bytes in 1 blocks are possibly lost in loss record 743 of 1,026</text>
    <leakedbytes>80</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x45416A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_character_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C0A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x277a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>91 bytes in 1 blocks are possibly lost in loss record 750 of 1,026</text>
    <leakedbytes>91</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x41A7F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x277b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>91 bytes in 1 blocks are possibly lost in loss record 751 of 1,026</text>
    <leakedbytes>91</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x41A80D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x277c</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>91 bytes in 1 blocks are possibly lost in loss record 752 of 1,026</text>
    <leakedbytes>91</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x41A821</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x277d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>91 bytes in 1 blocks are possibly lost in loss record 753 of 1,026</text>
    <leakedbytes>91</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x41A835</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x277e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>91 bytes in 1 blocks are possibly lost in loss record 754 of 1,026</text>
    <leakedbytes>91</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x41A849</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x277f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>91 bytes in 1 blocks are possibly lost in loss record 755 of 1,026</text>
    <leakedbytes>91</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x41A85D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2780</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>91 bytes in 1 blocks are possibly lost in loss record 756 of 1,026</text>
    <leakedbytes>91</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x41A871</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2781</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>91 bytes in 1 blocks are possibly lost in loss record 757 of 1,026</text>
    <leakedbytes>91</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x41A885</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2784</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>96 bytes in 3 blocks are possibly lost in loss record 760 of 1,026</text>
    <leakedbytes>96</leakedbytes>
    <leakedblocks>3</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40D6C1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>location_class::location_class()</fn>
    </frame>
    <frame>
      <ip>0x4119B9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_class::window_class()</fn>
    </frame>
    <frame>
      <ip>0x449DC1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_manager_class::create_windows(int)</fn>
    </frame>
    <frame>
      <ip>0x437B06</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2785</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>96 bytes in 3 blocks are possibly lost in loss record 761 of 1,026</text>
    <leakedbytes>96</leakedbytes>
    <leakedblocks>3</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40D6C1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>location_class::location_class()</fn>
    </frame>
    <frame>
      <ip>0x40D7EA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_element_class::window_element_class()</fn>
    </frame>
    <frame>
      <ip>0x4639B8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_main(int)</fn>
    </frame>
    <frame>
      <ip>0x437BC4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2786</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>96 bytes in 3 blocks are possibly lost in loss record 762 of 1,026</text>
    <leakedbytes>96</leakedbytes>
    <leakedblocks>3</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40D6C1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>location_class::location_class()</fn>
    </frame>
    <frame>
      <ip>0x40D7FC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_element_class::window_element_class()</fn>
    </frame>
    <frame>
      <ip>0x40A88F</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2788</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>112 bytes in 1 blocks are possibly lost in loss record 764 of 1,026</text>
    <leakedbytes>112</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x474B79</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_spritesheet(std::string, int, int)</fn>
    </frame>
    <frame>
      <ip>0x41BEBD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x27a3</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>128 bytes in 4 blocks are possibly lost in loss record 791 of 1,026</text>
    <leakedbytes>128</leakedbytes>
    <leakedblocks>4</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40D6C1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>location_class::location_class()</fn>
    </frame>
    <frame>
      <ip>0x40D7EA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_element_class::window_element_class()</fn>
    </frame>
    <frame>
      <ip>0x452EAB</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_character_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C0A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x27a4</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>128 bytes in 4 blocks are possibly lost in loss record 792 of 1,026</text>
    <leakedbytes>128</leakedbytes>
    <leakedblocks>4</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40D6C1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>location_class::location_class()</fn>
    </frame>
    <frame>
      <ip>0x40D7FC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_element_class::window_element_class()</fn>
    </frame>
    <frame>
      <ip>0x452EAB</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_character_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C0A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x27b8</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>184 bytes in 4 blocks are possibly lost in loss record 812 of 1,026</text>
    <leakedbytes>184</leakedbytes>
    <leakedblocks>4</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x554CB95</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_ttf-2.0.so.0.6.3</obj>
    </frame>
    <frame>
      <ip>0x554E8BC</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_ttf-2.0.so.0.6.3</obj>
      <fn>TTF_RenderUNICODE_Blended</fn>
    </frame>
    <frame>
      <ip>0x554EBA3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_ttf-2.0.so.0.6.3</obj>
      <fn>TTF_RenderUTF8_Blended</fn>
    </frame>
    <frame>
      <ip>0x405D81</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>font_class::write(int, int, int, int, float, float, float, float, std::string)</fn>
    </frame>
    <frame>
      <ip>0x40E3C7</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_element_class::render()</fn>
    </frame>
    <frame>
      <ip>0x412286</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_class::render()</fn>
    </frame>
    <frame>
      <ip>0x44AB4F</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_manager_class::render()</fn>
    </frame>
    <frame>
      <ip>0x45E16D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x27bd</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>192 bytes in 1 blocks are possibly lost in loss record 817 of 1,026</text>
    <leakedbytes>192</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x474B79</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_spritesheet(std::string, int, int)</fn>
    </frame>
    <frame>
      <ip>0x41AC82</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x27be</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>192 bytes in 6 blocks are possibly lost in loss record 818 of 1,026</text>
    <leakedbytes>192</leakedbytes>
    <leakedblocks>6</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40D6C1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>location_class::location_class()</fn>
    </frame>
    <frame>
      <ip>0x40D7EA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_element_class::window_element_class()</fn>
    </frame>
    <frame>
      <ip>0x40A88F</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x27bf</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>192 (16 direct, 176 indirect) bytes in 1 blocks are definitely lost in loss record 819 of 1,026</text>
    <leakedbytes>192</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B7B2</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>realloc</fn>
    </frame>
    <frame>
      <ip>0x6CCA59B</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libX11.so.6.3.0</obj>
    </frame>
    <frame>
      <ip>0x6CCAA2D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libX11.so.6.3.0</obj>
    </frame>
    <frame>
      <ip>0x6CCC000</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libX11.so.6.3.0</obj>
    </frame>
    <frame>
      <ip>0x6CCC7D5</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libX11.so.6.3.0</obj>
      <fn>_XlcCreateLC</fn>
    </frame>
    <frame>
      <ip>0x6CE9BFF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libX11.so.6.3.0</obj>
      <fn>_XlcDefaultLoader</fn>
    </frame>
    <frame>
      <ip>0x6CD3B71</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libX11.so.6.3.0</obj>
      <fn>_XOpenLC</fn>
    </frame>
    <frame>
      <ip>0x6CD3CB7</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libX11.so.6.3.0</obj>
      <fn>_XlcCurrentLC</fn>
    </frame>
    <frame>
      <ip>0x6CD3D0D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libX11.so.6.3.0</obj>
      <fn>XSetLocaleModifiers</fn>
    </frame>
    <frame>
      <ip>0x4E7474B</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
    </frame>
    <frame>
      <ip>0x4E753C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
    </frame>
    <frame>
      <ip>0x4E65A6C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
      <fn>SDL_VideoInit</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x27c1</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>256 bytes in 8 blocks are possibly lost in loss record 821 of 1,026</text>
    <leakedbytes>256</leakedbytes>
    <leakedblocks>8</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40D6C1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>location_class::location_class()</fn>
    </frame>
    <frame>
      <ip>0x40D7FC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_element_class::window_element_class()</fn>
    </frame>
    <frame>
      <ip>0x4639B8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_main(int)</fn>
    </frame>
    <frame>
      <ip>0x437BC4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x27c2</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>256 bytes in 8 blocks are possibly lost in loss record 822 of 1,026</text>
    <leakedbytes>256</leakedbytes>
    <leakedblocks>8</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40D6C1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>location_class::location_class()</fn>
    </frame>
    <frame>
      <ip>0x40D7FC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_element_class::window_element_class()</fn>
    </frame>
    <frame>
      <ip>0x41EF68</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_load(int)</fn>
    </frame>
    <frame>
      <ip>0x437BD8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x27c3</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>256 bytes in 8 blocks are possibly lost in loss record 823 of 1,026</text>
    <leakedbytes>256</leakedbytes>
    <leakedblocks>8</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40D6C1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>location_class::location_class()</fn>
    </frame>
    <frame>
      <ip>0x40D7FC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_element_class::window_element_class()</fn>
    </frame>
    <frame>
      <ip>0x423C7C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_save(int)</fn>
    </frame>
    <frame>
      <ip>0x437BE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x27c8</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>288 bytes in 9 blocks are possibly lost in loss record 828 of 1,026</text>
    <leakedbytes>288</leakedbytes>
    <leakedblocks>9</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40D6C1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>location_class::location_class()</fn>
    </frame>
    <frame>
      <ip>0x40D7EA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_element_class::window_element_class()</fn>
    </frame>
    <frame>
      <ip>0x46C6A3</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x27c9</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>288 bytes in 9 blocks are possibly lost in loss record 829 of 1,026</text>
    <leakedbytes>288</leakedbytes>
    <leakedblocks>9</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40D6C1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>location_class::location_class()</fn>
    </frame>
    <frame>
      <ip>0x40D7EA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_element_class::window_element_class()</fn>
    </frame>
    <frame>
      <ip>0x43E86A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x27d7</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>320 bytes in 10 blocks are possibly lost in loss record 843 of 1,026</text>
    <leakedbytes>320</leakedbytes>
    <leakedblocks>10</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40D6C1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>location_class::location_class()</fn>
    </frame>
    <frame>
      <ip>0x40D7EA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_element_class::window_element_class()</fn>
    </frame>
    <frame>
      <ip>0x428757</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x27d8</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>322 (232 direct, 90 indirect) bytes in 1 blocks are definitely lost in loss record 844 of 1,026</text>
    <leakedbytes>322</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x41757F</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x27da</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>352 bytes in 11 blocks are possibly lost in loss record 846 of 1,026</text>
    <leakedbytes>352</leakedbytes>
    <leakedblocks>11</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40D6C1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>location_class::location_class()</fn>
    </frame>
    <frame>
      <ip>0x40D7FC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_element_class::window_element_class()</fn>
    </frame>
    <frame>
      <ip>0x46C6A3</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x27dc</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>370 bytes in 9 blocks are possibly lost in loss record 848 of 1,026</text>
    <leakedbytes>370</leakedbytes>
    <leakedblocks>9</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x554CB95</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_ttf-2.0.so.0.6.3</obj>
    </frame>
    <frame>
      <ip>0x554E8BC</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_ttf-2.0.so.0.6.3</obj>
      <fn>TTF_RenderUNICODE_Blended</fn>
    </frame>
    <frame>
      <ip>0x554EBA3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_ttf-2.0.so.0.6.3</obj>
      <fn>TTF_RenderUTF8_Blended</fn>
    </frame>
    <frame>
      <ip>0x405D81</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>font_class::write(int, int, int, int, float, float, float, float, std::string)</fn>
    </frame>
    <frame>
      <ip>0x40EE50</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_element_class::render_tooltips()</fn>
    </frame>
    <frame>
      <ip>0x41230E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_class::render()</fn>
    </frame>
    <frame>
      <ip>0x44AB4F</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_manager_class::render()</fn>
    </frame>
    <frame>
      <ip>0x45F3B5</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::render()</fn>
    </frame>
    <frame>
      <ip>0x45E1BA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x27ea</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>416 bytes in 13 blocks are possibly lost in loss record 862 of 1,026</text>
    <leakedbytes>416</leakedbytes>
    <leakedblocks>13</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40D6C1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>location_class::location_class()</fn>
    </frame>
    <frame>
      <ip>0x4119CB</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_class::window_class()</fn>
    </frame>
    <frame>
      <ip>0x449DC1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_manager_class::create_windows(int)</fn>
    </frame>
    <frame>
      <ip>0x437B06</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x27ec</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>506 bytes in 13 blocks are possibly lost in loss record 864 of 1,026</text>
    <leakedbytes>506</leakedbytes>
    <leakedblocks>13</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x554CB95</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_ttf-2.0.so.0.6.3</obj>
    </frame>
    <frame>
      <ip>0x554E8BC</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_ttf-2.0.so.0.6.3</obj>
      <fn>TTF_RenderUNICODE_Blended</fn>
    </frame>
    <frame>
      <ip>0x554EBA3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_ttf-2.0.so.0.6.3</obj>
      <fn>TTF_RenderUTF8_Blended</fn>
    </frame>
    <frame>
      <ip>0x405D81</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>font_class::write(int, int, int, int, float, float, float, float, std::string)</fn>
    </frame>
    <frame>
      <ip>0x41220E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_class::render()</fn>
    </frame>
    <frame>
      <ip>0x44AB4F</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_manager_class::render()</fn>
    </frame>
    <frame>
      <ip>0x45E16D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2808</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>608 bytes in 19 blocks are possibly lost in loss record 892 of 1,026</text>
    <leakedbytes>608</leakedbytes>
    <leakedblocks>19</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA528</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4AA6F9</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4AA87B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40D6C1</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>location_class::location_class()</fn>
    </frame>
    <frame>
      <ip>0x40D7FC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_element_class::window_element_class()</fn>
    </frame>
    <frame>
      <ip>0x428757</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x280a</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>640 bytes in 1 blocks are definitely lost in loss record 894 of 1,026</text>
    <leakedbytes>640</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x6CB5915</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libX11.so.6.3.0</obj>
      <fn>XGetVisualInfo</fn>
    </frame>
    <frame>
      <ip>0x57C317D</ip>
      <obj>/usr/lib/nvidia-current/libGL.so.295.40</obj>
    </frame>
    <frame>
      <ip>0xDEAC08F</ip>
    </frame>
    <frame>
      <ip>0xDEAB9FF</ip>
    </frame>
    <frame>
      <ip>0xB</ip>
    </frame>
    <frame>
      <ip>0xDEAC08F</ip>
    </frame>
    <frame>
      <ip>0x1F</ip>
    </frame>
    <frame>
      <ip>0x257</ip>
    </frame>
    <frame>
      <ip>0x1</ip>
    </frame>
    <frame>
      <ip>0x4E6FB65</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
    </frame>
    <frame>
      <ip>0x4E74B9F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
    </frame>
  </stack>
</error>

<error>
  <unique>0x280d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>755 bytes in 18 blocks are possibly lost in loss record 897 of 1,026</text>
    <leakedbytes>755</leakedbytes>
    <leakedblocks>18</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x554CB95</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_ttf-2.0.so.0.6.3</obj>
    </frame>
    <frame>
      <ip>0x554E8BC</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_ttf-2.0.so.0.6.3</obj>
      <fn>TTF_RenderUNICODE_Blended</fn>
    </frame>
    <frame>
      <ip>0x554EBA3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_ttf-2.0.so.0.6.3</obj>
      <fn>TTF_RenderUTF8_Blended</fn>
    </frame>
    <frame>
      <ip>0x405D81</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>font_class::write(int, int, int, int, float, float, float, float, std::string)</fn>
    </frame>
    <frame>
      <ip>0x40E11B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_element_class::render()</fn>
    </frame>
    <frame>
      <ip>0x412286</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_class::render()</fn>
    </frame>
    <frame>
      <ip>0x44AB4F</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_manager_class::render()</fn>
    </frame>
    <frame>
      <ip>0x45E16D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2823</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>1,544 bytes in 1 blocks are possibly lost in loss record 919 of 1,026</text>
    <leakedbytes>1544</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x461110</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_equipment_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C14</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2824</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>1,544 bytes in 1 blocks are possibly lost in loss record 920 of 1,026</text>
    <leakedbytes>1544</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x43D2A4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_inventory_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C1E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2825</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>1,544 bytes in 1 blocks are possibly lost in loss record 921 of 1,026</text>
    <leakedbytes>1544</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x436668</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_quest_log_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C28</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2826</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>1,544 bytes in 1 blocks are possibly lost in loss record 922 of 1,026</text>
    <leakedbytes>1544</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x469D80</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_skillbook_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C32</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2827</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>1,688 (136 direct, 1,552 indirect) bytes in 1 blocks are definitely lost in loss record 923 of 1,026</text>
    <leakedbytes>1688</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B7B2</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>realloc</fn>
    </frame>
    <frame>
      <ip>0x6CCA59B</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libX11.so.6.3.0</obj>
    </frame>
    <frame>
      <ip>0x6CCAA2D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libX11.so.6.3.0</obj>
    </frame>
    <frame>
      <ip>0x6CCC000</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libX11.so.6.3.0</obj>
    </frame>
    <frame>
      <ip>0x6CCC7D5</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libX11.so.6.3.0</obj>
      <fn>_XlcCreateLC</fn>
    </frame>
    <frame>
      <ip>0x6CEDABF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libX11.so.6.3.0</obj>
      <fn>_XlcUtf8Loader</fn>
    </frame>
    <frame>
      <ip>0x6CD3B71</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libX11.so.6.3.0</obj>
      <fn>_XOpenLC</fn>
    </frame>
    <frame>
      <ip>0x6CD3CB7</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libX11.so.6.3.0</obj>
      <fn>_XlcCurrentLC</fn>
    </frame>
    <frame>
      <ip>0x6CD3D0D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libX11.so.6.3.0</obj>
      <fn>XSetLocaleModifiers</fn>
    </frame>
    <frame>
      <ip>0x4E7479B</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
    </frame>
    <frame>
      <ip>0x4E753C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
    </frame>
    <frame>
      <ip>0x4E65A6C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL-1.2.so.0.11.3</obj>
      <fn>SDL_VideoInit</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2828</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>1,800 bytes in 1 blocks are possibly lost in loss record 924 of 1,026</text>
    <leakedbytes>1800</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x41AA41</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2830</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>2,304 bytes in 1 blocks are definitely lost in loss record 932 of 1,026</text>
    <leakedbytes>2304</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C2B857</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>realloc</fn>
    </frame>
    <frame>
      <ip>0x50DA41C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_AllocateChannels</fn>
    </frame>
    <frame>
      <ip>0x45DEBA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2836</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>3,080 bytes in 1 blocks are possibly lost in loss record 938 of 1,026</text>
    <leakedbytes>3080</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x452E8B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_character_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C0A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2837</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>3,168 bytes in 99 blocks are definitely lost in loss record 939 of 1,026</text>
    <leakedbytes>3168</leakedbytes>
    <leakedblocks>99</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x474B79</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>texture_class::load_spritesheet(std::string, int, int)</fn>
    </frame>
    <frame>
      <ip>0x4133DE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::render()</fn>
    </frame>
    <frame>
      <ip>0x45F386</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::render()</fn>
    </frame>
    <frame>
      <ip>0x45E1BA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x283d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>4,616 bytes in 1 blocks are possibly lost in loss record 945 of 1,026</text>
    <leakedbytes>4616</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x40A86F</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2841</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>6,152 bytes in 1 blocks are possibly lost in loss record 949 of 1,026</text>
    <leakedbytes>6152</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x463998</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_main(int)</fn>
    </frame>
    <frame>
      <ip>0x437BC4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2842</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>6,152 bytes in 1 blocks are possibly lost in loss record 950 of 1,026</text>
    <leakedbytes>6152</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x41EF48</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_load(int)</fn>
    </frame>
    <frame>
      <ip>0x437BD8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2843</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>6,152 bytes in 1 blocks are possibly lost in loss record 951 of 1,026</text>
    <leakedbytes>6152</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x423C5C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_save(int)</fn>
    </frame>
    <frame>
      <ip>0x437BE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2844</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>6,920 bytes in 1 blocks are possibly lost in loss record 952 of 1,026</text>
    <leakedbytes>6920</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x43E84A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2849</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8,456 bytes in 1 blocks are possibly lost in loss record 957 of 1,026</text>
    <leakedbytes>8456</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x46C683</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x284b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>14,600 bytes in 1 blocks are possibly lost in loss record 959 of 1,026</text>
    <leakedbytes>14600</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x428737</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2859</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>30,984 bytes in 1 blocks are possibly lost in loss record 973 of 1,026</text>
    <leakedbytes>30984</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x554D14C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_ttf-2.0.so.0.6.3</obj>
      <fn>TTF_OpenFontIndexRW</fn>
    </frame>
    <frame>
      <ip>0x404F15</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>font_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x463394</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_main(int)</fn>
    </frame>
    <frame>
      <ip>0x437BC4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x285a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>30,984 bytes in 1 blocks are possibly lost in loss record 974 of 1,026</text>
    <leakedbytes>30984</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x554D14C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_ttf-2.0.so.0.6.3</obj>
      <fn>TTF_OpenFontIndexRW</fn>
    </frame>
    <frame>
      <ip>0x404F15</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>font_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x46C07C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_new(int)</fn>
    </frame>
    <frame>
      <ip>0x437BCE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x285b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>30,984 bytes in 1 blocks are possibly lost in loss record 975 of 1,026</text>
    <leakedbytes>30984</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x554D14C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_ttf-2.0.so.0.6.3</obj>
      <fn>TTF_OpenFontIndexRW</fn>
    </frame>
    <frame>
      <ip>0x404F15</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>font_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x41E944</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_load(int)</fn>
    </frame>
    <frame>
      <ip>0x437BD8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x285c</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>30,984 bytes in 1 blocks are possibly lost in loss record 976 of 1,026</text>
    <leakedbytes>30984</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x554D14C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_ttf-2.0.so.0.6.3</obj>
      <fn>TTF_OpenFontIndexRW</fn>
    </frame>
    <frame>
      <ip>0x404F15</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>font_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x423658</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_save(int)</fn>
    </frame>
    <frame>
      <ip>0x437BE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x285d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>30,984 bytes in 1 blocks are possibly lost in loss record 977 of 1,026</text>
    <leakedbytes>30984</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x554D14C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_ttf-2.0.so.0.6.3</obj>
      <fn>TTF_OpenFontIndexRW</fn>
    </frame>
    <frame>
      <ip>0x404F15</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>font_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x428130</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x285e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>30,984 bytes in 1 blocks are possibly lost in loss record 978 of 1,026</text>
    <leakedbytes>30984</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x554D14C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_ttf-2.0.so.0.6.3</obj>
      <fn>TTF_OpenFontIndexRW</fn>
    </frame>
    <frame>
      <ip>0x404F15</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>font_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x40A285</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x285f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>30,984 bytes in 1 blocks are possibly lost in loss record 979 of 1,026</text>
    <leakedbytes>30984</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x554D14C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_ttf-2.0.so.0.6.3</obj>
      <fn>TTF_OpenFontIndexRW</fn>
    </frame>
    <frame>
      <ip>0x404F15</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>font_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x43E260</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2860</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>30,984 bytes in 1 blocks are possibly lost in loss record 980 of 1,026</text>
    <leakedbytes>30984</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x554D14C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_ttf-2.0.so.0.6.3</obj>
      <fn>TTF_OpenFontIndexRW</fn>
    </frame>
    <frame>
      <ip>0x404F15</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>font_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x452884</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_character_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C0A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2861</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>30,984 bytes in 1 blocks are possibly lost in loss record 981 of 1,026</text>
    <leakedbytes>30984</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x554D14C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_ttf-2.0.so.0.6.3</obj>
      <fn>TTF_OpenFontIndexRW</fn>
    </frame>
    <frame>
      <ip>0x404F15</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>font_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x460B0C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_equipment_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C14</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2862</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>30,984 bytes in 1 blocks are possibly lost in loss record 982 of 1,026</text>
    <leakedbytes>30984</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x554D14C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_ttf-2.0.so.0.6.3</obj>
      <fn>TTF_OpenFontIndexRW</fn>
    </frame>
    <frame>
      <ip>0x404F15</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>font_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x43CCA0</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_inventory_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C1E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2863</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>30,984 bytes in 1 blocks are possibly lost in loss record 983 of 1,026</text>
    <leakedbytes>30984</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x554D14C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_ttf-2.0.so.0.6.3</obj>
      <fn>TTF_OpenFontIndexRW</fn>
    </frame>
    <frame>
      <ip>0x404F15</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>font_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x436064</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_quest_log_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C28</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2864</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>30,984 bytes in 1 blocks are possibly lost in loss record 984 of 1,026</text>
    <leakedbytes>30984</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x554D14C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_ttf-2.0.so.0.6.3</obj>
      <fn>TTF_OpenFontIndexRW</fn>
    </frame>
    <frame>
      <ip>0x404F15</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>font_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x46977C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_skillbook_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C32</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2874</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>52,012 bytes in 1 blocks are possibly lost in loss record 1,000 of 1,026</text>
    <leakedbytes>52012</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D89C8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x463307</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_main(int)</fn>
    </frame>
    <frame>
      <ip>0x437BC4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2875</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>52,012 bytes in 1 blocks are possibly lost in loss record 1,001 of 1,026</text>
    <leakedbytes>52012</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D89C8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x41E8B7</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_load(int)</fn>
    </frame>
    <frame>
      <ip>0x437BD8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2876</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>52,012 bytes in 1 blocks are possibly lost in loss record 1,002 of 1,026</text>
    <leakedbytes>52012</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D89C8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x4235CB</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_save(int)</fn>
    </frame>
    <frame>
      <ip>0x437BE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2877</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>52,012 bytes in 1 blocks are possibly lost in loss record 1,003 of 1,026</text>
    <leakedbytes>52012</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D89C8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x42809A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2878</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>52,012 bytes in 1 blocks are possibly lost in loss record 1,004 of 1,026</text>
    <leakedbytes>52012</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D89C8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x40A1EF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2879</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>52,012 bytes in 1 blocks are possibly lost in loss record 1,005 of 1,026</text>
    <leakedbytes>52012</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D89C8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x43E1CA</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x287a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>52,012 bytes in 1 blocks are possibly lost in loss record 1,006 of 1,026</text>
    <leakedbytes>52012</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D89C8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x4527EE</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_character_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C0A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x287b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>52,012 bytes in 1 blocks are possibly lost in loss record 1,007 of 1,026</text>
    <leakedbytes>52012</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D89C8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x460A7F</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_equipment_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C14</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x287c</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>52,012 bytes in 1 blocks are possibly lost in loss record 1,008 of 1,026</text>
    <leakedbytes>52012</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D89C8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x43CC13</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_inventory_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C1E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x287d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>52,012 bytes in 1 blocks are possibly lost in loss record 1,009 of 1,026</text>
    <leakedbytes>52012</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D89C8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x435FD7</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_quest_log_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C28</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x287e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>52,012 bytes in 1 blocks are possibly lost in loss record 1,010 of 1,026</text>
    <leakedbytes>52012</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D89C8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x4696EF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_skillbook_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C32</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2880</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>55,624 bytes in 1 blocks are possibly lost in loss record 1,012 of 1,026</text>
    <leakedbytes>55624</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D89C8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x46325D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_main(int)</fn>
    </frame>
    <frame>
      <ip>0x437BC4</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2881</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>55,624 bytes in 1 blocks are possibly lost in loss record 1,013 of 1,026</text>
    <leakedbytes>55624</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D89C8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x41E80D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_load(int)</fn>
    </frame>
    <frame>
      <ip>0x437BD8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2882</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>55,624 bytes in 1 blocks are possibly lost in loss record 1,014 of 1,026</text>
    <leakedbytes>55624</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D89C8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x423521</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_game_save(int)</fn>
    </frame>
    <frame>
      <ip>0x437BE2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2883</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>55,624 bytes in 1 blocks are possibly lost in loss record 1,015 of 1,026</text>
    <leakedbytes>55624</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D89C8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x427FE7</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_menu_options(int)</fn>
    </frame>
    <frame>
      <ip>0x437BEC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2884</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>55,624 bytes in 1 blocks are possibly lost in loss record 1,016 of 1,026</text>
    <leakedbytes>55624</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D89C8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x40A13C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_player_profile(int)</fn>
    </frame>
    <frame>
      <ip>0x437BF6</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2885</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>55,624 bytes in 1 blocks are possibly lost in loss record 1,017 of 1,026</text>
    <leakedbytes>55624</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D89C8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x43E117</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_action_bar(int)</fn>
    </frame>
    <frame>
      <ip>0x437C00</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2886</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>55,624 bytes in 1 blocks are possibly lost in loss record 1,018 of 1,026</text>
    <leakedbytes>55624</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D89C8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x45273B</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_character_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C0A</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2887</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>55,624 bytes in 1 blocks are possibly lost in loss record 1,019 of 1,026</text>
    <leakedbytes>55624</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D89C8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x4609D5</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_equipment_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C14</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2888</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>55,624 bytes in 1 blocks are possibly lost in loss record 1,020 of 1,026</text>
    <leakedbytes>55624</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D89C8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x43CB69</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_inventory_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C1E</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2889</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>55,624 bytes in 1 blocks are possibly lost in loss record 1,021 of 1,026</text>
    <leakedbytes>55624</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D89C8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x435F2D</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_quest_log_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C28</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x288a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>55,624 bytes in 1 blocks are possibly lost in loss record 1,022 of 1,026</text>
    <leakedbytes>55624</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x50D89C8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libSDL_mixer-1.2.so.0.10.1</obj>
      <fn>Mix_LoadWAV_RW</fn>
    </frame>
    <frame>
      <ip>0x4502AF</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>sound_class::load(std::string)</fn>
    </frame>
    <frame>
      <ip>0x469645</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>setup_skillbook_window(int)</fn>
    </frame>
    <frame>
      <ip>0x437C32</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x288b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>158,608 bytes in 1 blocks are possibly lost in loss record 1,023 of 1,026</text>
    <leakedbytes>158608</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x449DA2</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>window_manager_class::create_windows(int)</fn>
    </frame>
    <frame>
      <ip>0x437B06</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>UI_class::UI_setup()</fn>
    </frame>
    <frame>
      <ip>0x45E0CD</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x288d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>440,052 bytes in 1 blocks are possibly lost in loss record 1,025 of 1,026</text>
    <leakedbytes>440052</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x417469</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x288e</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>440,052 bytes in 1 blocks are definitely lost in loss record 1,026 of 1,026</text>
    <leakedbytes>440052</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B6CD</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4C194C</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4C19D8</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4174DC</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>map_2D_class::random_map(int, int, int, int)</fn>
    </frame>
    <frame>
      <ip>0x45EC91</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>game_class::init()</fn>
    </frame>
    <frame>
      <ip>0x45E059</ip>
      <obj>/host/_git_/Frost_and_Flame/Frost_And_Flame</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<errorcounts>
  <pair>
    <count>301</count>
    <unique>0x2</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x2378</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x2377</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x2376</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x2375</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x2374</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x2373</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x2372</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x2371</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x2370</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x7bb</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x7ba</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x7b9</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x7b8</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x7b7</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x7b6</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x7b5</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x7b4</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x7b3</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x7b2</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x7b1</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x7b0</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x7af</unique>
  </pair>
  <pair>
    <count>455</count>
    <unique>0x30f</unique>
  </pair>
  <pair>
    <count>465</count>
    <unique>0x2f4</unique>
  </pair>
  <pair>
    <count>455</count>
    <unique>0x30d</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x7ab</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x7aa</unique>
  </pair>
  <pair>
    <count>460</count>
    <unique>0x2fe</unique>
  </pair>
  <pair>
    <count>460</count>
    <unique>0x2fd</unique>
  </pair>
  <pair>
    <count>455</count>
    <unique>0x309</unique>
  </pair>
  <pair>
    <count>455</count>
    <unique>0x308</unique>
  </pair>
  <pair>
    <count>455</count>
    <unique>0x307</unique>
  </pair>
  <pair>
    <count>455</count>
    <unique>0x306</unique>
  </pair>
  <pair>
    <count>455</count>
    <unique>0x305</unique>
  </pair>
  <pair>
    <count>455</count>
    <unique>0x304</unique>
  </pair>
  <pair>
    <count>455</count>
    <unique>0x303</unique>
  </pair>
  <pair>
    <count>455</count>
    <unique>0x2ff</unique>
  </pair>
  <pair>
    <count>25</count>
    <unique>0x3ff</unique>
  </pair>
  <pair>
    <count>25</count>
    <unique>0x3fb</unique>
  </pair>
  <pair>
    <count>10</count>
    <unique>0x3fc</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x302</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x300</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x2fc</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x2fb</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x2fa</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x2f9</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x2f8</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x2f7</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x2f6</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x2f5</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x2f3</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x2f2</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x2f1</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x2f0</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x2ef</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x2ee</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x2ed</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x2ec</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x2eb</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x2ea</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x2e9</unique>
  </pair>
  <pair>
    <count>425</count>
    <unique>0xd8</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x2e7</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x2e6</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x2e4</unique>
  </pair>
  <pair>
    <count>415</count>
    <unique>0xe5</unique>
  </pair>
  <pair>
    <count>355</count>
    <unique>0xd4</unique>
  </pair>
  <pair>
    <count>355</count>
    <unique>0xd3</unique>
  </pair>
  <pair>
    <count>415</count>
    <unique>0xd9</unique>
  </pair>
  <pair>
    <count>415</count>
    <unique>0xd7</unique>
  </pair>
  <pair>
    <count>25</count>
    <unique>0x16c</unique>
  </pair>
  <pair>
    <count>25</count>
    <unique>0x164</unique>
  </pair>
  <pair>
    <count>25</count>
    <unique>0x163</unique>
  </pair>
  <pair>
    <count>25</count>
    <unique>0x162</unique>
  </pair>
  <pair>
    <count>25</count>
    <unique>0x161</unique>
  </pair>
  <pair>
    <count>25</count>
    <unique>0x160</unique>
  </pair>
  <pair>
    <count>10</count>
    <unique>0x1a3</unique>
  </pair>
  <pair>
    <count>10</count>
    <unique>0x1a2</unique>
  </pair>
  <pair>
    <count>10</count>
    <unique>0x1a1</unique>
  </pair>
  <pair>
    <count>10</count>
    <unique>0x19a</unique>
  </pair>
  <pair>
    <count>10</count>
    <unique>0x185</unique>
  </pair>
  <pair>
    <count>10</count>
    <unique>0x180</unique>
  </pair>
  <pair>
    <count>10</count>
    <unique>0x17f</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0xe2</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0xe1</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0xe0</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0xdf</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0xde</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0xdd</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0xdc</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0xdb</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0xda</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0xd6</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0xd5</unique>
  </pair>
  <pair>
    <count>100</count>
    <unique>0xc</unique>
  </pair>
  <pair>
    <count>100</count>
    <unique>0xb</unique>
  </pair>
</errorcounts>

<suppcounts>
  <pair>
    <count>2</count>
    <name>dl-hack3-cond-1</name>
  </pair>
</suppcounts>

</valgrindoutput>

